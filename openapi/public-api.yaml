openapi: 3.0.0
info:
  title: COMPAON PUBLIC API
  version: 1.0.0
  contact:
    email: compaon@dalavina.com
    name: Compaon
    url: 'https://dalavina.com/compaon'
  license:
    name: EULA
    url: 'https://en.wikipedia.org/wiki/End-user_license_agreement'
  description: API definition for COMPAON
servers:
  - url: 'http://52.74.156.150:3000/public/api/v1'
paths:
  '/exhibitions/{id}':
    parameters:
      - name: id
        description: ID to get exhibition
        in: path
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
    get:
      summary: Get exhibition by ID is listing
      description: Return a single exhibition is listing
      operationId: getExhibitionById
      parameters:
        - in: query
          name: populate
          schema:
            type: array
            items:
              type: string
              example: 'category'
          description: |
            List of populatable columns:
            - booths
            - booths.booth_images.image
            - booths.booth_images.booth_template_position
            - booths.booth_videos.video
            - booths.booth_videos.booth_template_position
            - booths.booth_projects.project
            - booths.booth_projects.booth_template_position
            - booths.booth_template
            - booths.location.space_template_location
            - space
            - space.space_template
            - space.space_template.space_template_locations
            - space.space_images.image
            - space.space_images.space_template_position
            - space.space_videos.video
            - space.space_videos.space_template_position
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exhibition'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Exhibition
  '/medias/{id}':
    parameters:
      - name: id
        description: ID to get media
        in: path
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
    get:
      summary: Get media by ID
      description: Return a single media
      operationId: getMediaById
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Media
  '/enterprises/{id}':
    parameters:
      - name: id
        description: ID to get media
        in: path
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
    get:
      summary: Get enterprise by ID
      description: Return a single enterprise
      operationId: getEnterpriseById
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Enterprise
  '/meetings':
    post:
      summary: Create a meeting
      description: Create a enterprise
      operationId: createMeeting
      requestBody:
        description: Create a booth
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meeting'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Meeting
    get:
      summary: Get list of meeting
      description: Return list of meeting
      operationId: getMeetings
      parameters:
      - in: query
        name: page
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '1'
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '10'
        description: The numbers of items to return
      - in: query
        name: search
        allowReserved: true
        schema:
          type: string
          example: 'test@compaon.com'
        description: |
         Searching on allow columns:
          - customer_name,
          - email,
          - phone
      - in: query
        name: sort_by
        allowReserved: true
        schema:
          type: string
          example: 'id:DESC'
        description: |
          Sort on allow columns:
            - [['id', 'start_time','end_time', 'created_at'], [DESC,ASC]]
            - Default: [['created_at', 'DESC']]
      - in: query
        name: filter.booth.id
        allowReserved: true
        schema:
          type: string
          example: $eq:30
        description: Filter on the `booth.id` field.
      - in: query
        name: populate
        schema:
          type: array
          items:
            type: string
            example: 'booth'
        description: |
         Searching on allow columns:
          - booth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Meeting
  '/booth-templates':
    get:
      summary: Show list booth templates
      description: Show list booth-templates
      operationId: getBoothTemplates
      parameters:
      - in: query
        name: page
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '1'
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '10'
        description: The numbers of items to return
      - in: query
        name: search
        allowReserved: true
        schema:
          type: string
          example: 'triễn lảm'
        description: |
         Searching on allow columns:
          - id,
          - name,
          - type,
          - created_at
      - in: query
        name: sort_by
        allowReserved: true
        schema:
          type: string
          example: 'id:DESC'
        description: |
          Sort on allow columns:
            - [['id', 'type','name', 'created_at'], [DESC,ASC]]
            - Default: [['createdAt', 'DESC']]
      - in: query
        name: filter.type
        allowReserved: true
        schema:
          type: string
          example: $eq:product
        description: Filter on the `type` field.
      - in: query
        name: populate
        schema:
          type: array
          items:
            type: string
            example: 'booth_template_positions'
        description: |
         Searching on allow columns:
          - booth_template_positions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoothTemplateList'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
      tags:
        - Booth Template
  '/conferences/{id}':
    get:
      summary: Get conference by ID
      description: Return a single conference
      operationId: getConferenceById
      parameters:
      - name: id
        description: ID get conference
        in: path
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
      - in: query
        name: populate
        schema:
          type: array
          items:
            type: string
            example: 'conference_template'
        description: |
            List of populatable columns:
            - exhibition
            - conference_template
            - conference_template.conference_template_positions
            - conference_images
            - conference_images.image
            - conference_images.conference_template_position
            - conference_videos
            - conference_videos.video
            - conference_videos.conference_template_position
      tags:
        - Conference
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conference'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
components:
  schemas:
    Exhibition:
      type: object
      required:
        - id
        - name
        - booth_number
        - exhibition_code
        - date_exhibition_start
        - date_exhibition_end
        - introduction
        - agenda
        - status
        - category_id
        - space_template_id
        - conference_template_id
        - booth_organization_template_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: Triển lãm xúc tiến đầu tư thương mại
        exhibition_code:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '^[a-zA-Z0-9_-]+$'
          example: TL0001
        booth_number:
          type: integer
          example: 100
        date_exhibition_start:
          type: string
          minLength: 1
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-01-01T00:00:00.000Z'
        date_exhibition_end:
          type: string
          minLength: 1
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-12-01T00:00:00.000Z'
        introduction:
          type: string
          minLength: 1
          maxLength: 20000
          example: Giới thiệu công ty Tòa nhà C22-Officetel, số 22 Nguyễn Việt Hồng, phường An Phú, quận Ninh Kiều, TP. Cần Thơ
        agenda:
          type: string
          minLength: 1
          maxLength: 20000
          example: '07h45 - 08h20: Đón tiếp đại biểu, 08h20 - 08h40: Ca nhạc chào mừng'
        status:
          type: string
          enum: ['new', 'listing', 'finished']
          example: 'new'
        booth_organization_template_id:
          type: integer
          writeOnly: true
          example: 1
        space_template_id:
          type: integer
          writeOnly: true
          example: 1
        conference_template_id:
          type: integer
          writeOnly: true
          example: 1
        booth_organization_id:
          type: integer
          readOnly: true
          example: 1
        space_id:
          type: integer
          readOnly: true
          example: 1
        category_id:
          type: number
          writeOnly: true
          example: 1
    ExhibitionList:
      type: object
      required:
        - page
        - limit
        - total
        - exhibitions
      properties:
        page:
          type: integer
          example: 0
          description: The number of items to skip before starting to collect the result set.
        limit:
          type: integer
          example: 10
          description: The number of items to return.
        total:
          type: integer
          format: int64
          example: 1
        exhibitions:
          type: array
          items:
            $ref: '#/components/schemas/Exhibition'
    Category:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          example: 0
          description: The number id category.
        name:
          type: string
          example: 'loai triễn lảm'
          description: The name category.
    BoothOrganization:
      type: object
      required:
        - id
        - position_x
        - position_y
        - position_z
        - rotation_x
        - rotation_y
        - rotation_z
        - booth_organization_template_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        position_x:
          type: number
          example: 1
        position_y:
          type: number
          example: 1
        position_z:
          type: number
          example: 1
        rotation_x:
          type: number
          example: 1
        rotation_y:
          type: number
          example: 1
        rotation_z:
          type: number
          example: 1
        booth_organization_template_id:
          type: integer
          writeOnly: true
          example: 1
        booth_organization_images:
          type: array
          items:
            $ref: '#/components/schemas/BoothOrganizationImage'
        booth_organization_videos:
          type: array
          items:
            $ref: '#/components/schemas/BoothOrganizationVideo'
        booth_organization_projects:
          type: array
          items:
            $ref: '#/components/schemas/BoothOrganizationProject'
        booth_organization_products:
          type: array
          items:
            $ref: '#/components/schemas/BoothOrganizationProduct'
    BoothOrganizationImage:
      type: object
      required:
        - id
        - image_id
        - booth_organization_template_position_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        selected_media_id:
          type: integer
          writeOnly: true
          example: 1
        image_id:
          type: integer
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          example: 'base64 string'
        booth_organization_template_position_id:
          type: integer
          writeOnly: true
          example: 1
    BoothOrganizationVideo:
      type: object
      required:
        - id
        - video_id
        - booth_organization_template_position_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        selected_media_id:
          type: integer
          writeOnly: true
          example: 1
        video_id:
          type: integer
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          example: 'base64 string'
        booth_organization_template_position_id:
          type: integer
          writeOnly: true
          example: 1
    BoothOrganizationProject:
      type: object
      required:
        - id
        - image_id
        - title
        - description
        - booth_organization_template_position_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        selected_media_id:
          type: integer
          writeOnly: true
          example: 1
        image_id:
          type: integer
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          example: 'base64 string'
        title:
          type: string
          maxLength: 255
          example: "Tên dự án"
        description:
          type: string
          maxLength: 20000
          example: "Mô tả dự án"
        booth_organization_template_position_id:
          type: integer
          writeOnly: true
          example: 1
    BoothOrganizationProduct:
      type: object
      required:
        - id
        - name
        - image_id
        - price
        - purchase_link
        - description
        - booth_organization_template_position_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          maxLength: 255
          example: "name"
        selected_media_id:
          type: integer
          writeOnly: true
          example: 1
        image_id:
          type: integer
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          example: 'base64 string'
        price:
          type: number
          format: float
          example: 20000
        purchase_link:
          type: string
          maxLength: 255
          example: 'https://link_mua_san_pham/ma_ha_noi.png'
        description:
          type: string
          maxLength: 500
          example: 'Mô tả sản phẩm'
        booth_organization_template_position_id:
          type: integer
          writeOnly: true
          example: 1
    BoothOrganizationTemplatePosition:
      type: object
      required:
        - id
        - type
        - position
      properties:
        id:
          type: number
          readOnly: true
          example: 1
        position:
          type: string
          maxLength: 255
          example: vitri1
        type:
          type: string
          enum: ['image', 'video', 'project', 'product']
          example: 'image'
    Space:
      type: object
      required:
        - id
        - space_template_id
        - name
        - space_datas
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        space_template:
          $ref: '#/components/schemas/SpaceTemplate'
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: 'Mau khong gian tien sanh mac dinh'
        user_id:
          type: integer
          readOnly: true
          example: 1
        space_datas:
          type: array
          items:
            $ref: '#/components/schemas/SpaceData'
    SpaceData:
      type: object
      required:
        - id
        - position_space_id
        - media_id
      properties:
        id:
          type: integer
          readOnly: true
        position_space_id:
          type: integer
          writeOnly: true
        position_space:
          $ref: '#/components/schemas/PositionSpace'
        selected_media_id:
          type: integer
          writeOnly: true
        media_id:
          type: integer
          readOnly: true
        media_data:
          type: string
          writeOnly: true
        title:
          type: string
        description:
          type: string
    BoothTemplate:
      type: object
      required:
        - id
        - model_data
        - thumbnail_data
        - name
        - type
        - created_by
        - created_date
        - model_id
        - thumbnail_id
        - booth_template_positions
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        created_date:
          type: string
          readOnly: true
        model_data:
          type: string
          description: 'input base64 string /n example: iVBORw0KGgoAAAANSUhEUgAABuIAAASxCAYAAADF8I...'
          writeOnly: true
        thumbnail_data:
          type: string
          description: "input base64 string example: iVBORw0KGgoAAAANSUhEUgAABuIAAASxCAYAAADF8I..."
          writeOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 255
        type:
          type: string
          enum: ['project', 'product', 'organize']
          example: 'project'
        model_id:
          type: integer
          readOnly: true
        thumbnail_id:
          type: integer
          readOnly: true
        booth_template_positions:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BoothTemplatePosition'
    PositionBooth:
      type: object
      required:
        - id
        - type
        - object_3d_id
      properties:
        id:
          type: number
          readOnly: true
          example: 1
        type:
          type: string
          example: 'img'
        object_3d_id:
          type: string
          pattern: '^[a-zA-Z\d\-_.,\s]+$'
          maxLength: 255
    SpaceTemplate:
      type: object
      required:
        - id
        - name
        - model_id
        - thumbnail_id
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 255
        model_id:
          type: integer
          readOnly: true
        thumbnail_id:
          type: integer
          readOnly: true
        exhibition_map_id:
          type: integer
          readOnly: true
        position_spaces:
          type: array
          items:
            $ref: '#/components/schemas/PositionSpace'
        spaces:
          type: array
          items:
            $ref: '#/components/schemas/Space'
    PositionSpace:
      type: object
      readOnly: true
      required:
       - id
       - object_3d_id
       - type
      properties:
        id:
          type: integer
          readOnly: true
        object_3d_id:
          type: string
          pattern: '^[a-zA-Z\d\-_.,\s]+$'
          maxLength: 255
        type:
          type: string
          description: "input value [image, video, text]"
          minLength: 1
          maxLength: 255
    ErrorResponseBody:
      type: object
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
    ErrorDetail:
      type: object
      required:
        - field
        - message
      properties:
        field:
          type: string
        message:
          type: string
    Role:
      type: object
      readOnly: true
      required:
        - id
      properties:
        id:
          type: integer
        name:
          type: string
    BoothData:
      type: object
      required:
        - id
        - position_booth_id
        - media_id
      properties:
        id:
          type: integer
          readOnly: true
        position_booth_id:
          type: integer
          writeOnly: true
        selected_media_id:
          type: integer
          writeOnly: true
        media_id:
          type: integer
          readOnly: true
        media_data:
          type: string
          writeOnly: true
    Project:
      type: object
      required:
        - id
        - position_booth_id
        - media_id
        - title
        - description
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        position_booth_id:
          type: integer
          writeOnly: true
        selected_media_id:
          type: integer
          writeOnly: true
        media_id:
          type: integer
          readOnly: true
        media_data:
          type: string
          writeOnly: true
        title:
          type: string
        description:
          type: string
          maxLength: 20000
    Product:
      type: object
      required:
        - id
        - name
        - price
        - purchase_link
        - position_booth_id
        - description
        - media_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        position_booth_id:
          type: integer
          writeOnly: true
        selected_media_id:
          type: integer
          writeOnly: true
        media_id:
          type: integer
          readOnly: true
        media_data:
          type: string
          writeOnly: true
        name:
          type: string
        price:
          type: integer
        purchase_link:
          type: string
        description:
          type: string
          maxLength: 20000
    LiveStream:
      type: object
      required:
        - id
        - link
        - time
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        link:
          type: string
          minLength: 1
          example: 'www.goole.com'
        time:
          type: string
          minLength: 1
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-12-01T00:00:00.000Z'
    BoothTemplatePosition:
      type: object
      required:
        - id
        - type
        - position
      properties:
        id:
          type: number
          readOnly: true
          example: 1
        type:
          type: string
          enum: ['image', 'video', 'project', 'product']
          example: 'image'
        position:
          type: string
          maxLength: 255
    Booth:
      type: object
      required:
        - id
        - enterprise_id
        - created_by
        - location_id
        - booth_template_id
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        enterprise_id:
          type: integer
          example: 1
        created_by:
          type: integer
          readOnly: true
          example: 1
        created_date:
          type: string
          readOnly: true
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-01-01T00:00:00.000Z'
        location_id:
          type: integer
          writeOnly: true
          example: 1
        booth_template_id:
          type: integer
          writeOnly: true
          example: 1
        live_streams:
          type: array
          items:
            $ref: '#/components/schemas/LiveStream'
        booth_images:
          type: array
          items:
            $ref: '#/components/schemas/BoothImage'
        booth_videos:
          type: array
          items:
            $ref: '#/components/schemas/BoothVideo'
        booth_projects:
          type: array
          items:
            $ref: '#/components/schemas/BoothProject'
        booth_products:
          type: array
          items:
            $ref: '#/components/schemas/BoothProduct'
    Media:
      type: object
      required:
        - id
        - mime
        - url
        - user_id
      properties:
        id:
          type: integer
          readOnly: true
        mime:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
        user_id:
          type: integer
          readOnly: true
    BoothImage:
      type: object
      required:
        - id
        - booth_template_position_id
        - image_id
      properties:
        id:
          type: integer
          readOnly: true
        selected_media_id:
          type: integer
          writeOnly: true
          description: This column exists if image selected from data center
          example: 1
        image_id:
          type: integer
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          description: This column exists if image selected from your local
          example: 'base64 string'
        booth_template_position_id:
          type: integer
          example: 1
    BoothVideo:
      type: object
      required:
        - id
        - booth_template_position_id
        - video_id
      properties:
        id:
          type: integer
          readOnly: true
        selected_media_id:
          type: integer
          writeOnly: true
          description: This column exists if video selected from data center
          example: 1
        video_id:
          type: integer
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          description: This column exists if video selected from your local
          example: 'base64 string'
        booth_template_position_id:
          type: integer
          example: 1
    BoothProject:
      type: object
      required:
        - id
        - booth_template_position_id
        - image_id
        - title
        - description
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        selected_media_id:
          type: integer
          writeOnly: true
          description: This column exists if video or image selected from data center
        image_id:
          type: integer
          readOnly: true
        media_data:
          type: string
          writeOnly: true
          description: This column exists if video or image selected from your local
          example: 'base64 string'
        title:
          type: string
          maxLength: 255
          example: 'Tên dự án'
        description:
          type: string
          maxLength: 20000
          example: 'Nội dung mô tả cho dự án'
        booth_template_position_id:
          type: integer
          writeOnly: true
          example: 1
    BoothProduct:
      type: object
      required:
        - id
        - name
        - price
        - purchase_link
        - booth_template_position_id
        - description
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          maxLength: 255
          example: 'mận Hà Nội'
        price:
          type: number
          format: float
          example: 35000
        purchase_link:
          type: string
          maxLength: 255
          example: 'https://link_mua_san_pham/ma_ha_noi.png'
        description:
          type: string
          maxLength: 500
          example: 'Mô tả sản phẩm'
        selected_media_id:
          type: integer
          writeOnly: true
          description: This column exists if image selected from data center
          example: 1
        image_id:
          type: integer
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          description: This column exists if image selected from your local
          example: 'base64 string'
        booth_template_position_id:
          type: integer
          writeOnly: true
          example: 1
    Location:
      type: object
      required:
        - id
        - status
        - space_id
        - space_template_location_id
      properties:
        id:
          type: integer
          readOnly: true
        status:
          type: string
          enum: ['available', 'reserved']
          default: 'available'
        space_id:
          type: number
          writeOnly: true
          example: 1
        space_template_location_id:
          type: number
          writeOnly: true
          example: 1
        space_template_location:
          $ref: '#/components/schemas/SpaceTemplateLocation'
    SpaceTemplateLocation:
      type: object
      required:
        - id
        - name
        - position_x
        - position_y
        - position_z
        - rotation_x
        - rotation_y
        - rotation_z
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          example: 'a'
        position_x:
          type: number
          example: 1
        position_y:
          type: number
          example: 1
        position_z:
          type: number
          example: 1
        rotation_x:
          type: number
          example: 1
        rotation_y:
          type: number
          example: 1
        rotation_z:
          type: number
          example: 1
    SpaceTemplatePosition:
      type: object
      required:
       - id
       - position
       - type
      properties:
        id:
          type: integer
          readOnly: true
        position:
          type: string
          maxLength: 255
        type:
          type: string
          enum: ['image','video']
    SpaceVideo:
      type: object
      required:
        - id
        - space_id
        - space_template_position_id
        - video_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        space_id:
          type: number
          writeOnly: true
          example: 1
        space_template_position_id:
          type: number
          writeOnly: true
          example: 1
        select_media_id:
          type: number
          writeOnly: true
          example: 1
        video_id:
          type: number
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          example: "base64 string"
    SpaceImage:
      type: object
      required:
        - id
        - space_id
        - space_template_position_id
        - image_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        space_id:
          type: number
          writeOnly: true
          example: 1
        space_template_position_id:
          type: number
          writeOnly: true
          example: 1
        select_media_id:
          type: number
          writeOnly: true
          example: 1
        image_id:
          type: number
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          example: "base64 string"
    Enterprise:
      type: object
      required:
        - id
        - name
        - phone
        - email
        - address
        - description
        - image_id
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: DALAVINA TECHNOLOGY SOLUTION JOINT STOCK TECHNOLOGY
        phone:
          type: string
          pattern: '^(((\+|)84)|0)([0-9]{9})$'
          example: 0707678777
        email:
          type: string
          format: email
          example: dalavina@dalavina.com
        address:
          type: string
          minLength: 1
          maxLength: 255
          example: 224, Phạm Thị Giây, ấp Tam Đông 2, Hóc Môn, Thành phố Hồ Chí Minh
        selected_media_id:
          type: integer
          writeOnly: true
        image_id:
          type: number
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          example: 'base64 string'
        description:
          type: string
          minLength: 1
        link_website:
          type: string
          minLength: 1
          maxLength: 255
          example: https://dalavina.com/view_company_online
        link_profile:
          type: string
          minLength: 1
          maxLength: 255
          example: https://dalavina.com/view_company_online
        type_of_business:
          type: string
          minLength: 1
          maxLength: 255
          example: Công ty cổ phần ngoài NN
    MeetingList:
      type: object
      required:
        - page
        - limit
        - total
        - meetings
      properties:
        page:
          type: integer
          readOnly: true
          example: 1
        limit:
          type: integer
          readOnly: true
          example: 1
        total:
          type: integer
          readOnly: true
          example: 1
        meetings:
          type: array
          items:
            $ref: '#/components/schemas/Meeting'
    Meeting:
      type: object
      required:
        - 'id'
        - 'booth_id'
        - 'customer_name'
        - 'phone'
        - 'email'
        - 'start_time'
        - 'end_time'
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        booth_id:
          type: integer
          writeOnly: true
          example: 1
        customer_name:
          type: string
          minLength: 1
          maxLength: 255
          example: John
        phone:
          type: string
          minLength: 1
          maxLength: 255
          example: '0970000000'
        email:
          type: string
          format: email
        start_time:
          type: string
          minLength: 1
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-12-01T00:00:00.000Z'
        end_time:
          type: string
          minLength: 1
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-12-01T00:00:00.000Z'
        note:
          type: string
          minLength: 1
          maxLength: 255
    ConferenceTemplate:
      type: object
      required:
        - id
        - model_data
        - thumbnail_data
        - name
        - created_by
        - created_date
        - model_id
        - thumbnail_id
        - conference_template_positions
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        created_date:
          type: string
          readOnly: true
        model_data:
          type: string
          description: 'input base64 string /n example: iVBORw0KGgoAAAANSUhEUgAABuIAAASxCAYAAADF8I...'
          writeOnly: true
        thumbnail_data:
          type: string
          description: "input base64 string example: iVBORw0KGgoAAAANSUhEUgAABuIAAASxCAYAAADF8I..."
          writeOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 255
        model_id:
          type: integer
          readOnly: true
        thumbnail_id:
          type: integer
          readOnly: true
        conference_template_positions:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ConferenceTemplatePosition'
    ConferenceTemplatePosition:
      type: object
      required:
        - id
        - type
        - position
      properties:
        id:
          type: number
          readOnly: true
          example: 1
        type:
          type: string
          enum: ['image', 'video']
          example: 'image'
        position:
          type: string
          maxLength: 255
    BoothTemplateList:
      type: object
      required:
        - page
        - limit
        - total
        - booth_templates
      properties:
        page:
          type: integer
          example: 0
          description: The number of items to skip before starting to collect the result set.
        limit:
          type: integer
          example: 10
          description: The number of items to return.
        total:
          type: integer
          format: int64
          example: 1
        booth_templates:
          type: array
          items:
            $ref: '#/components/schemas/BoothTemplate'
    Conference:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        conference_template_id:
          type: integer
          example: 1
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: 'Mau phong hop 1'
        exhibition_id:
          type: number
          example: 1
        conference_images:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ConferenceImage'
        conference_videos:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ConferenceVideo'
    ConferenceVideo:
      type: object
      required:
        - id
        - conference_id
        - conference_template_position_id
        - video_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        conference_id:
          type: number
          writeOnly: true
          example: 1
        conference_template_position_id:
          type: number
          writeOnly: true
          example: 1
        select_media_id:
          type: number
          writeOnly: true
          example: 1
        video_id:
          type: number
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          example: "base64 string"
    ConferenceImage:
      type: object
      required:
        - id
        - conference_id
        - conference_template_position_id
        - image_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        conference_id:
          type: number
          writeOnly: true
          example: 1
        conference_template_position_id:
          type: number
          writeOnly: true
          example: 1
        select_media_id:
          type: number
          writeOnly: true
          example: 1
        image_id:
          type: number
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          example: "base64 string"
    User:
        type: object
        required:
          - id
          - name
          - phone
          - email
          - role_id
          - status
          - enterprise_id
        properties:
          id:
            type: integer
            readOnly: true
          name:
            type: string
          phone:
            type: string
            pattern: '^(((\+|)84)|0)([0-9]{9})$'
            example: 0707060142
          email:
              type: string
              format: email
          password:
            type: string
            format: password
            writeOnly: true
            minLength: 6
            maxLength: 255
          role_id:
            type: number
            writeOnly: true
          role:
            $ref: '#/components/schemas/Role'
          status:
            type: string
            enum: [active, inactive]
          enterprise_id:
            type: number
