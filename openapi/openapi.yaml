openapi: 3.0.0
info:
  title: COMPAON API
  version: 1.0.0
  contact:
    email: compaon@dalavina.com
    name: Compaon
    url: 'https://dalavina.com/compaon'
  license:
    name: EULA
    url: 'https://en.wikipedia.org/wiki/End-user_license_agreement'
  description: API definition for COMPAON
tags:
  - name: Booth
    description: API to interact with the Booth
  - name: Exhibition
    description: API to interact with the Exhibition
  - name: Media
    description: API to interact with the Media
  - name: Enterprise
    description: API to interact with the Enterprise
  - name: Space
    description: API to interact with the Space
  - name: User
    description: API to interact with the User
  - name: Auth
    description: API to interact with the Authorization
servers:
  - url: 'http://52.74.156.150:3000/api/v1'
  - url: 'http://localhost:3000/api/v1'
paths:
  '/exhibitions':
    get:
      summary: Show list exhibitions
      description: Show list exhibitions
      operationId: getExhibitions
      parameters:
      - in: query
        name: page
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '1'
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '10'
        description: The numbers of items to return
      - in: query
        name: search
        allowReserved: true
        schema:
          type: string
          example: 'Triển lãm xúc tiến đầu'
        description: |
          Searching on allow columns:['name']:
          ```
          http://localhost:3000/api/v1/exhibitions?search=Triển lãm xúc tiến đầu
          ```
      - in: query
        name: sort_by
        allowReserved: true
        schema:
          type: string
          example: 'id:DESC'
        description: |
          Sort on allow columns:
           - ['id', 'DESC']
           - ['id', 'ASC']
      - in: query
        name: filter.status
        allowReserved: true
        schema:
          type: string
          example: $eq:new
        description: Filter on the `status` field.
      - in: query
        name: populate
        schema:
          type: array
          items:
            type: string
            example: 'booth_organization'
        description: |
          List of populatable columns
          | Populates          |
          |--------------------|
          | category           |
          | space              |
          | booth_organization |
          | booth_template     |
          | space_template     |
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExhibitionList'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
      tags:
        - Exhibition
    post:
      tags:
        - Exhibition
      summary: Add a basic information of exhibition
      description: Add a basic information of exhibition
      operationId: addInfoExhibition
      requestBody:
        description: Create a basic information exhibition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exhibition'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exhibition'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/exhibitions/{id}':
    get:
      summary: Get exhibition by ID
      description: Return a single exhibition
      operationId: getExhibitionById
      parameters:
        - name: id
          description: ID to get exhibition
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exhibition'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Exhibition
  '/exhibitions/{exhibitionId}/booths':
    post:
      tags:
        - Exhibition
      summary: Add a booth
      description: Add a booth
      operationId: addBooth
      parameters:
        - name: exhibitionId
          description: ID to get exhibition
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      requestBody:
        description: Create a booth
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booth'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booth'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/exhibitions/{exhibitionId}/booths/{boothId}':
    put:
      tags:
        - Exhibition
      summary: Update an existing booth
      description: Update an existing booth by Id
      operationId: updateBooth
      parameters:
        - name: exhibitionId
          description: ID to get exhibition
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
        - name: boothId
          description: ID to get booth
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      requestBody:
        description: Update an existing booth
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booth'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booth'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not found
                    details: []
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
    get:
      summary: Get booth by ID
      description: Return a single booth
      operationId: getBoothById
      parameters:
        - name: exhibitionId
          description: ID to get exhibition
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
        - name: boothId
          description: ID to get booth
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
        - in: query
          name: populate
          schema:
            type: array
            items:
              type: string
              example: 'booth_data.position_booth'
          description: |
              List of populateTable columns
                |      Populates     |
                |--------------------|
                | booth_data.position_booth |
                | products.position_booth |
                | projects.position_booth |
                | booth_template |
                | location_status |
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booth'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Exhibition
  '/booth-templates/{id}':
    get:
      summary: Get booth template by ID
      description: Return a single booth template
      operationId: getBoothTemplateById
      parameters:
        - name: id
          description: ID to get booth template
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
        - in: query
          name: populate
          schema:
            type: array
            items:
              type: string
              example: 'position_booths'
          description:
           " Searching on allow columns:['position_booths', 'booth_organizations']"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoothTemplate'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Booth
  '/booth-templates':
    get:
      summary: Show list booth templates
      description: Show list booth-templates
      operationId: getBoothTemplates
      parameters:
      - in: query
        name: page
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '1'
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '10'
        description: The numbers of items to return
      - in: query
        name: search
        allowReserved: true
        schema:
          type: string
          example: 'triễn lảm'
        description:
         " Searching on allow columns:['id', 'name', 'type', 'created_at']\n
          example: http://localhost:3000/api/v1/name?search=triễn lảm"
      - in: query
        name: sort_by
        allowReserved: true
        schema:
          type: string
          example: 'id:DESC'
        description: "Sort on allow columns:[['id', 'type','name', 'created_at'],[DESC,ASC]]\n default column:['created_at', 'DESC']"
      - in: query
        name: filter.type
        allowReserved: true
        schema:
          type: string
          example: $eq:product
        description: Filter on the `type` field.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoothTemplateList'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
      tags:
        - Booth
    post:
      tags:
        - Booth
      summary: Add a boothTemplate
      description: Add a boothTemplate
      operationId: addBoothTemplate
      requestBody:
        description: Create a booth
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoothTemplate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoothTemplate'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/booth-organizations/{id}':
     get:
      summary: Get booth organization by ID
      description: Return a single booth organization
      operationId: getBoothOrganizationById
      parameters:
      - name: id
        description: ID to update booth organization
        in: path
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
      - in: query
        name: populate
        schema:
          type: array
          items:
            type: string
            example: 'position_spaces'
        description:
         " Searching on allow columns:['booth_organization_data, booth_template, booth_organization_data.position_booth']"
      tags:
        - Booth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoothOrganization'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
     put:
      tags:
        - Booth
      summary: Update an existing booth
      description: Update an existing booth by Id
      operationId: updateBoothOrganization
      parameters:
        - name: id
          description: ID to update booth
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      requestBody:
        description: Update an existing booth
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoothOrganization'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoothOrganization'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not found
                    details: []
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/space-templates/{id}':
    get:
      summary: Get space template by ID
      description: Return a single space template
      operationId: getSpaceTemplateById
      parameters:
        - name: id
          description: ID to get space template
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
        - in: query
          name: populate
          schema:
            type: array
            items:
              type: string
              example: 'position_spaces'
          description:
           " Searching on allow columns:['position_spaces', 'spaces']"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceTemplate'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Space
  '/space-templates':
    get:
      summary: Show list space templates
      description: Show list space templates
      operationId: getSpaceTemplates
      parameters:
      - in: query
        name: page
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '1'
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '10'
        description: The numbers of items to return
      - in: query
        name: search
        schema:
          type: string
          example: 'Space 01'
        description:
         " Searching on allow columns:['id', 'name']\n
          example: http://localhost:3000/api/v1/space-templates?search=1"
      - in: query
        name: sort_by
        allowReserved: true
        schema:
          type: string
          example: 'name:DESC'
        description: "Sort on allow columns:[['id', 'name', 'created_at'],[DESC,ASC]]\n default column:['created_at', 'DESC']"
      - in: query
        name: filter.name
        allowReserved: true
        schema:
          type: string
          example: $eq:Space 01
        description: Filter on the `name` field.
      - in: query
        name: populate
        schema:
          type: array
          items:
            type: string
            example: 'position_spaces'
        description:
         " Searching on allow columns:['position_spaces, spaces']"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceTemplateList'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Space
  '/spaces/{id}':
    get:
      summary: Get space by ID
      description: Return a single space
      operationId: getSpaceById
      parameters:
      - name: id
        description: ID to update space
        in: path
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
      - in: query
        name: populate
        schema:
          type: array
          items:
            type: string
            example: 'position_spaces'
        description:
         " Searching on allow columns:['space_datas, space_datas.position_space, space_template']"
      tags:
        - Space
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
    put:
      tags:
        - Space
      summary: Update an existing space
      description: Update an existing space by Id
      operationId: updateSpace
      parameters:
        - name: id
          description: ID to update space
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      requestBody:
        description: Update an existing space
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Space'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not found
                    details: []
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/enterprises/{id}/document/{document_id}':
    put:
      tags:
        - Enterprise
      summary: Update document by id enterprise
      description: Update document by id enterprise
      operationId: updateDocumentsEnterprise
      parameters:
        - in: path
          schema:
            type: string
            pattern: '^[0-9]+$'
          name: id
          required: true
          description: The enterprise's ID will be update documents
        - in: path
          name: document_id
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
          description: The document's ID will be update documents
      requestBody:
        description: Update document enterprise's
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterpriseDocument'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseDocument'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/enterprises':
    get:
      tags:
        - Enterprise
      summary: Show list enterprises
      description: Show list enterprises
      operationId: getEnterprises
      parameters:
        - in: query
          name: page
          schema:
            type: string
            pattern: '^[0-9]+$'
            example: '1'
          description: Results page you want to retrieve
        - in: query
          name: limit
          schema:
            type: string
            pattern: '^[0-9]+$'
            default: '10'
          description: The numbers of items to return
        - in: query
          name: search
          allowReserved: true
          schema:
            type: string
            example: 'dalavina'
          description: |
            Searching on allow columns:['abbreviation', createdBy]:
            ```
            http://localhost:3000/api/v1/exhibitions?search=dalavina
            ```
        - in: query
          name: sort_by
          allowReserved: true
          schema:
            type: array
            items:
              type: string
          example: 'abbreviation:desc'
          description: column name for ordering and value [desc,asc]
        - in: query
          name: populate
          schema:
            type: array
            items:
              type: string
              example: 'documents'
          description: |
            List of populatable columns
            | Populates          |
            |--------------------|
            | documents          |
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseList'
    post:
      tags:
        - Enterprise
      summary: Add a new enterprise
      description: Add a new enterprise
      operationId: addEnterprise
      requestBody:
        description: Create a new enterprise
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enterprise'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/enterprises/{id}/documents':
    post:
      tags:
        - Enterprise
      summary: Add a new enterprise's document
      description: Add a new enterprise's document
      operationId: addEnterpriseDocument
      parameters:
        - schema:
            type: string
            pattern: '^[0-9]+$'
          name: id
          in: path
          required: true
          description: The enterprise's ID will be add new document
      requestBody:
        description: Create a new enterprise's document
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterpriseDocument'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseDocument'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
    get:
      tags:
        - Enterprise
      summary: Get documents of enterprise
      description: Return a documents
      operationId: getDocument
      parameters:
        - name: id
          description: ID of enterprises to get documents
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: The numbers of items to return
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentList'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/enterprises/{id}/qrcodes':
    post:
      tags:
        - Enterprise
      summary: Create a enterprise's qrcode
      description: Create a enterprise's qrcode
      operationId: createQrCode
      parameters:
        - schema:
            type: string
            pattern: '^[0-9]+$'
          name: id
          in: path
          required: true
          description: The enterprise's ID will be add new qrcode
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
              examples:
                example-1:
                  value:
                    url: 'base64'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/enterprises/{id}':
    parameters:
      - name: id
        description: ID to get enterprise
        in: path
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
    get:
      summary: Get enterprise by ID
      description: Return a single enterprise
      operationId: getEnterpriseById
      tags:
        - Enterprise
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
    put:
      tags:
        - Enterprise
      summary: Update an existing enterprise
      description: Update an existing enterprise by Id
      operationId: updateEnterprise
      parameters:
        - name: id
          description: ID to update enterprise
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      requestBody:
        description: Update an existent enterprise
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enterprise'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
    delete:
      tags:
        - Enterprise
      summary: Delete an existing enterprise
      description: Delete an existing enterprise by Id
      operationId: deleteEnterprise
      parameters:
        - name: id
          description: ID to delete enterprise
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      responses:
        '204':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/medias':
    get:
      tags:
        - Media
      summary: Show list medias
      description: Show list medias
      operationId: getMedias
      parameters:
      - in: query
        name: page
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '1'
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '10'
        description: The numbers of items to return
      - in: query
        name: search
        schema:
          type: string
          example: 'image'
        description:
         " Searching on allow columns:['id', 'mime', 'user_id', 'created_at']\n
          example: http://localhost:3000/api/v1/medias?search=image"
      - in: query
        name: sort_by
        allowReserved: true
        schema:
          type: string
          example: 'mime:DESC'
        description: "Sort on allow columns:[['id', 'mime', 'user_id', 'created_at'],[DESC,ASC]]\n default column:['created_at', 'DESC']"
      - in: query
        name: filter.user_id
        allowReserved: true
        schema:
          type: string
          example: $eq:1
        description: Filter on the `user_id` field.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaList'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
    post:
      tags:
        - Media
      summary: Add a new media
      description: Add a new media
      operationId: createMedia
      requestBody:
        description: Create a new media
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Media'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/medias/{id}':
    parameters:
      - name: id
        description: ID to get media
        in: path
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
    get:
      summary: Get media by ID
      description: Return a single media
      operationId: getMediaById
      tags:
        - Media
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/users':
    post:
      security: 
      - bearerAuth: []
      tags:
        - User
      summary: Add a new user
      description: Add a new user
      operationId: addUser
      requestBody:
        description: Create a new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/auth/login':
    post:
      tags:
        - Auth
      summary: Login to system
      description: Login to system
      operationId: login
      requestBody:
        description: Login to system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Login to system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/auth/logout':
      get:
        tags:
          - Auth
        summary: Logout from system
        description: Logout from system
        operationId: logout
        responses:
          '204':
            description: Logout to system
          '400':
            description: Validation error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponseBody'
                examples:
                  example-1:
                    value:
                      message: Bad Request
                      details:
                        - field: .params.id
                          message: 'should match pattern "^[0-9]+$"'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponseBody'
                examples:
                  example-1:
                    value:
                      message: Internal server error
                      details: []
components:
  schemas:
    Exhibition:
      type: object
      required:
        - id
        - name
        - category_id
        - booth_number
        - exhibition_code
        - date_exhibition_start
        - date_exhibition_end
        - booth_template_ids
        - space_template_id
        - space_id
        - organization_booth_id
        - introduction
        - agenda
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: Triển lãm xúc tiến đầu tư thương mại
        exhibition_code:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '^[a-zA-Z0-9_-]+$'
          example: TL0001
        category_id:
          type: integer
          writeOnly: true
          example: 1
        booth_number:
          type: integer
          example: 100
        date_exhibition_start:
          type: string
          minLength: 1
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-01-01T00:00:00.000Z'
        date_exhibition_end:
          type: string
          minLength: 1
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-12-01T00:00:00.000Z'
        booth_template_ids:
          writeOnly: true
          type: array
          items:
            type: integer
          example:
            - 1
            - 2
        space_id:
          type: integer
          readOnly: true
          example: 1
        space_template_id:
          type: integer
          writeOnly: true
          example: 1
        organization_booth_id:
          type: integer
          readOnly: true
          example: 1
        introduction:
          type: string
          minLength: 1
          maxLength: 20000
          example: Giới thiệu công ty Tòa nhà C22-Officetel, số 22 Nguyễn Việt Hồng, phường An Phú, quận Ninh Kiều, TP. Cần Thơ
        agenda:
          type: string
          minLength: 1
          maxLength: 20000
          example: '07h45 - 08h20: Đón tiếp đại biểu, 08h20 - 08h40: Ca nhạc chào mừng'
        status:
          type: string
          enum: ['new', 'listing', 'finished']
          example: 'new'
        number_booth:
          type: number
          example: 1
    BoothOrganization:
      type: object
      required:
        - id
        - booth_template_id
        - user_id
        - name
        - booth_organization_data
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        booth_template_id:
          type: integer
          example: 1
        user_id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: Gian hàng ban tổ chức
        booth_organization_data:
          type: array
          items:
            $ref: '#/components/schemas/BoothOrganizationData'
    BoothOrganizationData:
      type: object
      required:
        - id
        - position_booth_id
      properties:
        id:
          type: integer
          readOnly: true
          example:
        position_booth_id:
          type: integer
          writeOnly: true
        position_booth:
          $ref: '#/components/schemas/PositionBooth'
        selected_media_id:
          type: integer
          writeOnly: true
        media_id:
          type: integer
          readOnly: true
        media_data:
          type: string
          writeOnly: true
        title:
          type: string
        description:
          type: string
          maxLength: 20000
    Space:
      type: object
      required:
        - id
        - space_template_id
        - name
        - space_datas
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        space_template_id:
          type: integer
          example: 1
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: 'Mau khong gian tien sanh mac dinh'
        user_id:
          type: integer
          readOnly: true
          example: 1
        space_datas:
          type: array
          items:
            $ref: '#/components/schemas/SpaceData'
    SpaceData:
      type: object
      required:
        - id
        - position_space_id
        - media_id
      properties:
        id:
          type: integer
          readOnly: true
        position_space_id:
          type: integer
          writeOnly: true
        position_space:
          $ref: '#/components/schemas/PositionSpace'
        selected_media_id:
          type: integer
          writeOnly: true
        media_id:
          type: integer
          readOnly: true
        media_data:
          type: string
          writeOnly: true
        title:
          type: string
        description:
          type: string
    BoothTemplateList:
      type: object
      required:
        - page
        - limit
        - total
        - booth_templates
      properties:
        page:
          type: integer
          example: 0
          description: The number of items to skip before starting to collect the result set.
        limit:
          type: integer
          example: 10
          description: The number of items to return.
        total:
          type: integer
          format: int64
          example: 1
        booth_templates:
          type: array
          items:
            $ref: '#/components/schemas/BoothTemplate'
    BoothTemplate:
      type: object
      required:
        - id
        - model_data
        - thumbnail_data
        - name
        - type
        - created_by
        - created_date
        - model_id
        - thumbnail_id
        - position_booths
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        created_date:
          type: string
          readOnly: true
        model_data:
          type: string
          description: 'input base64 string /n example: iVBORw0KGgoAAAANSUhEUgAABuIAAASxCAYAAADF8I...'
          writeOnly: true
        thumbnail_data:
          type: string
          description: "input base64 string example: iVBORw0KGgoAAAANSUhEUgAABuIAAASxCAYAAADF8I..."
          writeOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 255
        type:
          type: string
          enum: ['project', 'product', 'organize']
          example: 'project'
        model_id:
          type: integer
          readOnly: true
        thumbnail_id:
          type: integer
          readOnly: true
        position_booths:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PositionBooth'
    SpaceTemplate:
      type: object
      required:
        - id
        - name
        - model_id
        - thumbnail_id
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 255
        model_id:
          type: integer
          readOnly: true
        thumbnail_id:
          type: integer
          readOnly: true
        exhibition_map_id:
          type: integer
          readOnly: true
        position_spaces:
          type: array
          items:
            $ref: '#/components/schemas/PositionSpace'
        spaces:
          type: array
          items:
            $ref: '#/components/schemas/Space'
    PositionSpace:
      type: object
      readOnly: true
      required:
       - id
       - object_3d_id
       - type
      properties:
        id:
          type: integer
          readOnly: true
        object_3d_id:
          type: string
          pattern: '^[a-zA-Z\d\-_.,\s]+$'
          maxLength: 255
        type:
          type: string
          description: "input value [image, video, text]"
          minLength: 1
          maxLength: 255
    SpaceTemplateList:
      type: object
      required:
        - page
        - limit
        - total
        - space_templates
      properties:
        page:
          type: integer
          example: 0
          description: The number of items to skip before starting to collect the result set.
        limit:
          type: integer
          example: 10
          description: The number of items to return.
        total:
          type: integer
          format: int64
          example: 1
        space_templates:
          type: array
          items:
            $ref: '#/components/schemas/SpaceTemplate'
    Enterprise:
      type: object
      required:
        - id
        - international_name
        - abbreviation
        - tax_code
        - address
        - ceo
        - phone
        - active_date
        - status
        - type_of_business
        - manager_by
        - created_by
        - created_date
      properties:
        id:
          type: integer
          readOnly: true
        international_name:
          type: string
          minLength: 1
          maxLength: 255
          example: DALAVINA TECHNOLOGY SOLUTION JOINT STOCK TECHNOLOGY
        abbreviation:
          type: string
          minLength: 1
          maxLength: 255
          example: DALAVINA JSC
        tax_code:
          type: string
          minLength: 1
          maxLength: 255
          example: 0371278269
        address:
          type: string
          minLength: 1
          maxLength: 255
          example: 224, Phạm Thị Giây, ấp Tam Đông 2, Hóc Môn, Thành phố Hồ Chí Minh
        ceo:
          type: string
          minLength: 1
          maxLength: 255
          example: PHAN THANH TUNG
        phone:
          type: string
          pattern: '^(((\+|)84)|0)([0-9]{9})$'
          example: 0707678777
        active_date:
          type: string
          minLength: 1
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-01-01T00:00:00.000Z'
        created_by:
          type: number
          readOnly: true
          minLength: 1
          example: 1
        created_date:
          type: string
          readOnly: true
          minLength: 1
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-01-01T00:00:00.000Z'
        status:
          type: string
          enum: ['active', 'inactive']
          example: 'active'
        type_of_business:
          type: string
          minLength: 1
          maxLength: 255
          example: Công ty cổ phần ngoài NN
        manager_by:
          type: string
          minLength: 1
          maxLength: 255
          example: Chi cục thuế Quận 1
        view_company_online:
          type: string
          minLength: 1
          maxLength: 255
          example: 'https://dalavina.com/view_company_online'
    EnterpriseDocument:
      type: object
      required:
        - title
        - content
        - is_profile
      properties:
        id:
          type: number
          readOnly: true
          example: 1
        title:
          type: string
          example: Tiêu đề ....
          maxLength: 255
        content:
          type: string
          example: Nội dung...
        is_profile:
          type: boolean
          example: false
        media_id:
          type: number
          readOnly: true
          example: 1
        selected_media_id:
          type: integer
          writeOnly: true
        media_data:
          type: string
          writeOnly: true
    MediaList:
      type: object
      required:
        - page
        - limit
        - total
        - medias
      properties:
        page:
          type: integer
          example: 0
          description: The number of items to skip before starting to collect the result set.
        limit:
          type: integer
          example: 10
          description: The number of items to return.
        total:
          type: integer
          format: int64
          example: 1
        medias:
          type: array
          items:
            $ref: '#/components/schemas/Media'
    Media:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        data:
          type: string
          minLength: 1
          writeOnly: true
        mime:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
        user_id:
          type: integer
          readOnly: true
    MediaResponse:
      type: object
      required:
        - id
        - mime
        - url
        - user_id
      properties:
        id:
          type: integer
          readOnly: true
        mime:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
        user_id:
          type: integer
          readOnly: true
    ErrorResponseBody:
      type: object
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
    ErrorDetail:
      type: object
      required:
        - field
        - message
      properties:
        field:
          type: string
        message:
          type: string
    EnterpriseList:
      type: object
      required:
        - limit
        - page
        - total
        - enterprises
      properties:
        page:
          type: integer
          example: 0
          description: The number of items to skip before starting to collect the result set.
        limit:
          type: integer
          example: 10
          description: The number of items to return.
        total:
          type: integer
          format: int64
          example: 1
        enterprises:
          type: array
          items:
            $ref: '#/components/schemas/Enterprise'
    DocumentList:
      type: object
      required:
        - limit
        - offset
        - total
        - documents
      properties:
        limit:
          type: integer
          format: int64
          example: 10
        offset:
          type: integer
          format: int64
          example: 0
        total:
          type: integer
          format: int64
          example: 1
        documents:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseDocument'
    PositionBooth:
      type: object
      required:
        - id
        - type
        - object_3d_id
      properties:
        id:
          type: number
          readOnly: true
          example: 1
        type:
          type: string
          example: 'img'
        object_3d_id:
          type: string
          pattern: '^[a-zA-Z\d\-_.,\s]+$'
          maxLength: 255
    ExhibitionList:
      type: object
      required:
        - page
        - limit
        - total
        - exhibitions
      properties:
        page:
          type: integer
          example: 0
          description: The number of items to skip before starting to collect the result set.
        limit:
          type: integer
          example: 10
          description: The number of items to return.
        total:
          type: integer
          format: int64
          example: 1
        exhibitions:
          type: array
          items:
            $ref: '#/components/schemas/Exhibition'
    Category:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          example: 0
          description: The number id category.
        name:
          type: string
          example: 'loai triễn lảm'
          description: The name category.
    User:
        type: object
        required:
          - id
          - phone
          - email
          - password
          - role_id
          - status
        properties:
          id:
            type: integer
            readOnly: true
          phone:
            type: string
            pattern: '^(((\+|)84)|0)([0-9]{9})$'
            example: 0707060142
          email:
              type: string
              format: email
          password:
            type: string
            format: password
            writeOnly: true
            minLength: 6
            maxLength: 255
          role_id:
            type: number
            writeOnly: true
          role:
            $ref: '#/components/schemas/Role'
          status:
            type: string
            enum: [active, inactive]
    Role:
      readOnly: true
      required:
        - id
      properties:
        id: 
          type: integer
        name:
          type: string
          readOnly: true
    Login:
      required: 
          - email
          - password
          - access_token
      properties:
        email:
          type: string
          format: email
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access_token:
          readOnly: true
          type: string
    BoothData:
      type: object
      required:
        - id
        - position_booth_id
        - media_id
      properties:
        id:
          type: integer
          readOnly: true
        position_booth_id:
          type: integer
          writeOnly: true
        selected_media_id:
          type: integer
          writeOnly: true
        media_id:
          type: integer
          readOnly: true
        media_data:
          type: string
          writeOnly: true
    Project:
      type: object
      required:
        - id
        - position_booth_id
        - media_id
        - title
        - description
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        position_booth_id:
          type: integer
          writeOnly: true
        selected_media_id:
          type: integer
          writeOnly: true
        media_id:
          type: integer
          readOnly: true
        media_data:
          type: string
          writeOnly: true
        title:
          type: string
        description:
          type: string
          maxLength: 20000
    Product:
      type: object
      required:
        - id
        - name
        - price
        - purchase_link
        - position_booth_id
        - description
        - media_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        position_booth_id:
          type: integer
          writeOnly: true
        selected_media_id:
          type: integer
          writeOnly: true
        media_id:
          type: integer
          readOnly: true
        media_data:
          type: string
          writeOnly: true
        name:
          type: string
        price:
          type: integer
        purchase_link:
          type: string
        description:
          type: string
          maxLength: 20000
    LiveStream:
      type: object
      required:
        - id
        - link
        - date
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        link:
          type: string
          minLength: 1
          example: 'www.goole.com'
        date:
          type: string
          minLength: 1
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-12-01T00:00:00.000Z'
    Booth:
      type: object
      required:
        - id
        - name
        - enterprise_id
        - created_by
        - location_status_id
        - booth_template_id
        - booth_data
        - live_streams
      properties:
        id:
          type: integer
          example: 1
          description: The number id booth.
          readOnly: true
        name:
          type: string
          example: 'triễn lảm'
          description: The name category.
        enterprise_id:
          type: integer
          example: 1
        created_by:
          type: integer
          readOnly: true
          example: 1
        location_status_id:
          type: integer
          writeOnly: true
          example: 1
        booth_template_id:
          type: integer
          writeOnly: true
          example: 1
        live_streams:
          type: array
          items:
            $ref: '#/components/schemas/LiveStream'
        booth_data:
          type: array
          items:
            $ref: '#/components/schemas/BoothData'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
