openapi: 3.0.0
info:
  title: COMPAON API
  version: 1.0.0
  contact:
    email: compaon@dalavina.com
    name: Compaon
    url: 'https://dalavina.com/compaon'
  license:
    name: EULA
    url: 'https://en.wikipedia.org/wiki/End-user_license_agreement'
  description: API definition for COMPAON
servers:
  - url: 'http://52.74.156.150:3000/api/v1'
paths:
  '/exhibitions':
    get:
      security:
      - bearerAuth: []
      summary: Show list exhibitions
      description: Show list exhibitions
      operationId: getExhibitions
      parameters:
      - in: query
        name: page
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '1'
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '10'
        description: The numbers of items to return
      - in: query
        name: search
        allowReserved: true
        schema:
          type: string
          example: 'Triển lãm xúc tiến đầu'
        description: |
          Searching on allow columns:['name']:
          ```
          http://localhost:3000/api/v1/exhibitions?search=Triển lãm xúc tiến đầu
          ```
      - in: query
        name: sort_by
        allowReserved: true
        schema:
          type: string
          example: 'id:DESC'
        description: |
          Sort on allow columns:
           - ['id', 'DESC']
           - ['id', 'ASC']
      - in: query
        name: filter.status
        allowReserved: true
        schema:
          type: string
          example: $eq:new
        description: Filter on the `status` field.
      - in: query
        name: populate
        schema:
          type: array
          items:
            type: string
            example: 'booth_organization'
        description: |
          List of populatable columns
          | Populates          |
          |--------------------|
          | category           |
          | space              |
          | booth_organization |
          | booth_template     |
          | space_template     |
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExhibitionList'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
      tags:
        - Exhibition
    post:
      security:
      - bearerAuth: []
      tags:
        - Exhibition
      summary: Add a basic information of exhibition
      description: Add a basic information of exhibition
      operationId: addInfoExhibition
      requestBody:
        description: Create a basic information exhibition
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/Exhibition'
              - properties:
                  booth_number:
                    type: number
                    example: 100
                  space_template_id:
                    type: integer
                    writeOnly: true
                    example: 1
                  conference_template_id:
                    type: integer
                    writeOnly: true
                    example: 1
                  booth_organization_template_id:
                    type: integer
                    writeOnly: true
                    example: 1
                  category_id:
                    type: integer
                    writeOnly: true
                    example: 1
                  status:
                    default: new
              required:
              - name
              - exhibition_code
              - date_exhibition_start
              - date_exhibition_end
              - introduction
              - agenda
              - booth_number
              - category_id
              - space_template_id
              - conference_template_id
              - booth_organization_template_id
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Exhibition'
                - properties:
                    booth_number:
                      type: number
                      example: 100
                required:
                - id
                - name
                - exhibition_code
                - date_exhibition_start
                - date_exhibition_end
                - introduction
                - agenda
                - status
                - booth_number
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/exhibitions/{id}':
    get:
      security:
      - bearerAuth: []
      summary: Get exhibition by ID
      description: Return a single exhibition
      operationId: getExhibitionById
      parameters:
        - name: id
          description: ID to get exhibition
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
        - in: query
          name: populate
          schema:
            type: array
            items:
              type: string
              example: 'booth_organization'
          description: |
            List of populatable columns:
            - category
            - space
            - space.locations
            - space.space_template
            - space.space_template.space_template_locations
            - booth_organization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Exhibition'
                - properties:
                    booth_number:
                      type: number
                      example: 100
                required:
                  - id
                  - name
                  - exhibition_code
                  - date_exhibition_start
                  - date_exhibition_end
                  - introduction
                  - agenda
                  - status
                  - booth_number
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Exhibition
    patch:
      summary: Update exhibition by ID
      description: Update exhibition
      operationId: updateExhibitionById
      parameters:
        - name: id
          description: ID of exhibition
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      requestBody:
        description: Update exhibition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exhibition'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Exhibition'
                - properties:
                    booth_number:
                      type: number
                      example: 100
                required:
                  - id
                  - name
                  - exhibition_code
                  - date_exhibition_start
                  - date_exhibition_end
                  - introduction
                  - agenda
                  - booth_number
                  - status
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Exhibition
    delete:
      tags:
        - Exhibition
      summary: Delete an existing exhibition
      description: Delete an existing exhibition by Id
      operationId: deleteExhibition
      parameters:
        - name: id
          description: ID to delete exhibition
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/exhibitions/{exhibition_id}/booths':
    post:
      security:
      - bearerAuth: []
      tags:
        - Exhibition
      summary: Add a booth
      description: Add a booth
      operationId: addBooth
      parameters:
        - name: exhibition_id
          description: ID to get exhibition
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      requestBody:
        description: Create a booth
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booth'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booth'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/exhibitions/{exhibition_id}/booths/{booth_id}':
    put:
      security:
      - bearerAuth: []
      tags:
        - Exhibition
      summary: Update an existing booth
      description: Update an existing booth by Id
      operationId: updateBooth
      parameters:
        - name: exhibition_id
          description: ID to get exhibition
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
        - name: booth_id
          description: ID to get booth
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      requestBody:
        description: Update an existing booth
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booth'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booth'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not found
                    details: []
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
    get:
      security:
      - bearerAuth: []
      summary: Get booth by ID
      description: Return a single booth
      operationId: getBoothById
      parameters:
        - name: exhibition_id
          description: ID to get exhibition
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
        - name: booth_id
          description: ID to get booth
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
        - in: query
          name: populate
          schema:
            type: array
            items:
              type: string
              example: 'booth_data.position_booth'
          description: |
            List of populable columns:
            - booth_images.booth_template_position
            - booth_projects.booth_template_position
            - booth_products.booth_template_position
            - booth_videos.booth_template_position
            - booth_template
            - location
            - location.space_template_location
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booth'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Exhibition
  '/booth-templates/{id}':
    get:
      security:
      - bearerAuth: []
      summary: Get booth template by ID
      description: Return a single booth template
      operationId: getBoothTemplateById
      parameters:
        - name: id
          description: ID to get booth template
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
        - in: query
          name: populate
          schema:
            type: array
            items:
              type: string
              example: 'position_booths'
          description:
           " Searching on allow columns:['booth_template_positions']"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoothTemplate'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Booth Template
    delete:
      tags:
        - Booth Template
      security:
      - bearerAuth: []
      summary: Delete an existing booth template
      description: Delete an existing booth template by Id
      operationId: deleteBoothTemplate
      parameters:
        - name: id
          description: ID to delete booth template
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/booth-organization-templates/{id}':
    get:
      security:
      - bearerAuth: []
      summary: Get booth organization template by ID
      description: Return a single booth organization template
      operationId: getBoothOrganizationTemplateById
      parameters:
        - name: id
          description: ID to get booth organization template
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
        - in: query
          name: populate
          schema:
            type: array
            items:
              type: string
              example: 'booth_organization_template_positions'
          description: |
            List of populatable columns:
            - booth_organization_template_positions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoothOrganizationTemplate'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Booth Organization Template
    delete:
      tags:
        - Booth Organization Template
      security:
      - bearerAuth: []
      summary: Delete an existing booth organization template
      description: Delete an existing booth organization template by Id
      operationId: deleteBoothOrganizationTemplate
      parameters:
        - name: id
          description: ID to delete booth organization template
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/booth-organization-templates':
    get:
      security:
      - bearerAuth: []
      summary: Show list booth organization templates
      description: Show list booth organization templates
      operationId: getBoothOrganizationTemplates
      parameters:
      - in: query
        name: page
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '1'
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '10'
        description: The numbers of items to return
      - in: query
        name: search
        allowReserved: true
        schema:
          type: string
          example: 'triễn lảm'
        description: |
         Searching on allow columns:
          - id,
          - name,
          - created_at
      - in: query
        name: sort_by
        allowReserved: true
        schema:
          type: string
          example: 'id:DESC'
        description: |
          Sort on allow columns:
            - [['id','name', 'created_at'], [DESC,ASC]]
            - Default: [['createdAt', 'DESC']]
      - in: query
        name: populate
        schema:
          type: array
          items:
            type: string
            example: 'booth_organization_template_positions'
        description: |
         Searching on allow columns:
            - booth_organization_template_positions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoothOrganizationTemplateList'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
      tags:
        - Booth Organization Template
    post:
      security:
      - bearerAuth: []
      tags:
        - Booth Organization Template
      summary: Add a booth organization template
      description: Add a booth organization template
      operationId: addBoothOrganizationTemplate
      requestBody:
        description: Create a booth organization template
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoothOrganizationTemplate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoothOrganizationTemplate'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/booth-templates':
    get:
      security:
      - bearerAuth: []
      summary: Show list booth templates
      description: Show list booth-templates
      operationId: getBoothTemplates
      parameters:
      - in: query
        name: page
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '1'
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '10'
        description: The numbers of items to return
      - in: query
        name: search
        allowReserved: true
        schema:
          type: string
          example: 'triễn lảm'
        description: |
         Searching on allow columns:
          - id,
          - name,
          - type,
          - created_at
      - in: query
        name: sort_by
        allowReserved: true
        schema:
          type: string
          example: 'id:DESC'
        description: |
          Sort on allow columns:
            - [['id', 'type','name', 'created_at'], [DESC,ASC]]
            - Default: [['createdAt', 'DESC']]
      - in: query
        name: filter.type
        allowReserved: true
        schema:
          type: string
          example: $eq:product
        description: Filter on the `type` field.
      - in: query
        name: populate
        schema:
          type: array
          items:
            type: string
            example: 'booth_template_positions'
        description: |
         Searching on allow columns:
          - booth_template_positions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoothTemplateList'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
      tags:
        - Booth Template
    post:
      security:
      - bearerAuth: []
      tags:
        - Booth Template
      summary: Add a boothTemplate
      description: Add a boothTemplate
      operationId: addBoothTemplate
      requestBody:
        description: Create a booth
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoothTemplate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoothTemplate'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/booth-organizations/{id}':
     get:
      security:
      - bearerAuth: []
      summary: Get booth organization by ID
      description: Return a single booth organization
      operationId: getBoothOrganizationById
      parameters:
      - name: id
        description: ID to get booth organization
        in: path
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
      - in: query
        name: populate
        schema:
          type: array
          items:
            type: string
            example: 'booth_organization_images.image'
        description: |
          List of populatable columns:
            - booth_organization_template
            - booth_organization_template.booth_organization_template_positions
            - booth_organization_products.product
            - booth_organization_projects.project
            - booth_organization_videos.video
            - booth_organization_images.image
            - booth_organization_products.booth_organization_template_position
            - booth_organization_projects.booth_organization_template_position
            - booth_organization_videos.booth_organization_template_position
            - booth_organization_images.booth_organization_template_position
      tags:
        - Booth Organization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoothOrganization'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
     put:
      security:
      - bearerAuth: []
      tags:
        - Booth Organization
      summary: Update an existing booth organization
      description: Update an existing booth organization by Id
      operationId: updateBoothOrganization
      parameters:
        - name: id
          description: ID to update booth organization
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      requestBody:
        description: Update an existing booth organization
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoothOrganization'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoothOrganization'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not found
                    details: []
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/booths':
    get:
      security:
      - bearerAuth: []
      summary: Show list booths
      description: Show list booths
      operationId: getBooths
      parameters:
      - in: query
        name: page
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '1'
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '10'
        description: The numbers of items to return
      - in: query
        name: search
        allowReserved: true
        schema:
          type: string
          example: 'Test'
        description: Search booths by name
      - in: query
        name: filter.enterpriseId
        allowReserved: true
        schema:
          type: string
          example: $eq:1
        description: Filter on the `enterpriseId` field.
      - in: query
        name: populate
        schema:
          type: array
          items:
            type: string
            example: 'booth_organization'
        description: |
           List of populatable columns:
             - booth_images.booth_template_position
             - booth_projects.booth_template_position
             - booth_products.booth_template_position
             - booth_videos.booth_template_position
             - booth_template
             - location
             - location.space_template_location
             - exhibition
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoothList'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
      tags:
        - Booth
  '/booths/{id}':
    get:
      security:
      - bearerAuth: []
      tags:
        - Booth
      summary: Get an existing booth
      description: Get an existing booth by Id
      operationId: getBooth
      parameters:
        - name: id
          description: ID to Get booth
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
        - in: query
          name: populate
          schema:
            type: array
            items:
              type: string
              example: 'booth'
          description: |
            List of populatable columns:
              - booth_images.booth_template_position
              - booth_images.image
              - booth_projects.booth_template_position
              - booth_projects.project
              - booth_products.booth_template_position
              - booth_products.product
              - booth_videos.booth_template_position
              - booth_videos.video
              - booth_template
              - location
              - location.space_template_location
              - exhibition
              - meetings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booth'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
    delete:
      tags:
        - Booth
      summary: Delete an existing booth
      description: Delete an existing booth by Id
      operationId: deleteBooth
      parameters:
        - name: id
          description: ID to delete booth
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/meetings':
    get:
      security:
      - bearerAuth: []
      summary: Get list of meeting
      description: Return list of meeting
      operationId: getMeetings
      parameters:
      - in: query
        name: page
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '1'
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '10'
        description: The numbers of items to return
      - in: query
        name: search
        allowReserved: true
        schema:
          type: string
          example: 'test@compaon.com'
        description: |
         Searching on allow columns:
          - customer_name,
          - email,
          - phone
      - in: query
        name: sort_by
        allowReserved: true
        schema:
          type: string
          example: 'id:DESC'
        description: |
          Sort on allow columns:
            - [['id', 'start_time','end_time', 'created_at'], [DESC,ASC]]
            - Default: [['created_at', 'DESC']]
      - in: query
        name: filter
        allowReserved: true
        schema:
          type: array
          items:
            type: string
            example: id:$eq:30
        description: Filter by the field with syntax `column_name:operator:value`
      - in: query
        name: populate
        schema:
          type: array
          items:
            type: string
            example: 'booth'
        description: |
         Searching on allow columns:
          - booth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Meeting
  '/space-templates/{id}':
    get:
      security:
      - bearerAuth: []
      summary: Get space template by ID
      description: Return a single space template
      operationId: getSpaceTemplateById
      parameters:
        - name: id
          description: ID to get space template
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
        - in: query
          name: populate
          schema:
            type: array
            items:
              type: string
              example: 'space_template_positions'
          description: |
            - space_template_positions
            - space_template_locations
            - spaces
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceTemplate'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Space Template
    delete:
      tags:
        - Space Template
      security:
      - bearerAuth: []
      summary: Delete an existing space template
      description: Delete an existing space template by Id
      operationId: deleteSpaceTemplate
      parameters:
        - name: id
          description: ID to delete space template
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/space-templates':
    get:
      security:
      - bearerAuth: []
      summary: Show list space templates
      description: Show list space templates
      operationId: getSpaceTemplates
      parameters:
      - in: query
        name: page
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '1'
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '10'
        description: The numbers of items to return
      - in: query
        name: search
        schema:
          type: string
          example: 'Space 01'
        description:
         " Searching on allow columns:['id', 'name']\n
          example: http://localhost:3000/api/v1/space-templates?search=1"
      - in: query
        name: sort_by
        allowReserved: true
        schema:
          type: string
          example: 'name:DESC'
        description: "Sort on allow columns:[['id', 'name', 'created_at'],[DESC,ASC]]\n default column:['created_at', 'DESC']"
      - in: query
        name: filter.name
        allowReserved: true
        schema:
          type: string
          example: $eq:Space 01
        description: Filter on the `name` field.
      - in: query
        name: populate
        schema:
          type: array
          items:
            type: string
            example: 'space_template_positions'
        description: |
          - space_template_positions
          - spaces
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceTemplateList'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Space Template
    post:
      security:
      - bearerAuth: []
      tags:
        - Space Template
      summary: Add a space template
      description: Add a space template
      operationId: addSpaceTemplate
      requestBody:
        description: Create a space template
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpaceTemplate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceTemplate'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/spaces/{id}':
    get:
      security:
       - bearerAuth: []
      summary: Get space by ID
      description: Return a single space
      operationId: getSpaceById
      parameters:
      - name: id
        description: ID to update space
        in: path
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
      - in: query
        name: populate
        schema:
          type: array
          items:
            type: string
            example: 'space_template'
        description: |
            List of populatable columns:
            - exhibition
            - space_template
            - space_template.space_template_positions
            - space_images
            - space_images.image
            - space_images.space_template_position
            - space_videos
            - space_videos.video
            - space_videos.space_template_position
      tags:
        - Space
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
    put:
      security:
      - bearerAuth: []
      tags:
        - Space
      summary: Update an existing space
      description: Update an existing space by Id
      operationId: updateSpace
      parameters:
        - name: id
          description: ID to update space
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      requestBody:
        description: Update an existing space
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Space'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not found
                    details: []
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/enterprises':
    get:
      tags:
        - Enterprise
      summary: Show list enterprises
      description: Show list enterprises
      operationId: getEnterprises
      parameters:
        - in: query
          name: page
          schema:
            type: string
            pattern: '^[0-9]+$'
            example: '1'
          description: Results page you want to retrieve
        - in: query
          name: limit
          schema:
            type: string
            pattern: '^[0-9]+$'
            default: '10'
          description: The numbers of items to return
        - in: query
          name: search
          allowReserved: true
          schema:
            type: string
            example: 'dalavina'
          description: |
            Searching on allow columns:['name']:
            ```
            http://localhost:3000/api/v1/exhibitions?search=dalavina
            ```
        - in: query
          name: sort_by
          allowReserved: true
          schema:
            type: array
            items:
              type: string
          example: 'name:desc'
          description: column name for ordering and value [desc,asc]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseList'
    post:
      tags:
        - Enterprise
      summary: Add a new enterprise
      description: Add a new enterprise
      operationId: addEnterprise
      requestBody:
        description: Create a new enterprise
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enterprise'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/enterprises/{id}/qrcodes':
    post:
      tags:
        - Enterprise
      summary: Create a enterprise's qrcode
      description: Create a enterprise's qrcode
      operationId: createQrCode
      parameters:
        - schema:
            type: string
            pattern: '^[0-9]+$'
          name: id
          in: path
          required: true
          description: The enterprise's ID will be add new qrcode
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
              examples:
                example-1:
                  value:
                    url: 'base64'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/enterprises/{id}':
    parameters:
      - name: id
        description: ID to get enterprise
        in: path
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
    get:
      summary: Get enterprise by ID
      description: Return a single enterprise
      operationId: getEnterpriseById
      tags:
        - Enterprise
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
    put:
      tags:
        - Enterprise
      summary: Update an existing enterprise
      description: Update an existing enterprise by Id
      operationId: updateEnterprise
      parameters:
        - name: id
          description: ID to update enterprise
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      requestBody:
        description: Update an existent enterprise
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enterprise'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
    delete:
      tags:
        - Enterprise
      summary: Delete an existing enterprise
      description: Delete an existing enterprise by Id
      operationId: deleteEnterprise
      parameters:
        - name: id
          description: ID to delete enterprise
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      responses:
        '204':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/medias':
    get:
      tags:
        - Media
      summary: Show list medias
      description: Show list medias
      operationId: getMedias
      parameters:
      - in: query
        name: page
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '1'
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: string
          pattern: '^[0-9]+'
          example: '10'
        description: The numbers of items to return
      - in: query
        name: search
        schema:
          type: string
          example: 'image'
        description:
         " Searching on allow columns:['id', 'mime', 'user_id', 'created_at']\n
          example: http://localhost:3000/api/v1/medias?search=image"
      - in: query
        name: sort_by
        allowReserved: true
        schema:
          type: string
          example: 'mime:DESC'
        description: "Sort on allow columns:[['id', 'mime', 'user_id', 'created_at'],[DESC,ASC]]\n default column:['created_at', 'DESC']"
      - in: query
        name: filter.user_id
        allowReserved: true
        schema:
          type: string
          example: $eq:1
        description: Filter on the `user_id` field.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaList'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
    post:
      tags:
        - Media
      summary: Add a new media
      description: Add a new media
      operationId: createMedia
      requestBody:
        description: Create a new media
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Media'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/medias/{id}':
    parameters:
      - name: id
        description: ID to get media
        in: path
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
    get:
      summary: Get media by ID
      description: Return a single media
      operationId: getMediaById
      tags:
        - Media
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/users':
    post:
      security:
      - bearerAuth: []
      tags:
        - User
      summary: Add a new user
      description: Add a new user
      operationId: addUser
      requestBody:
        description: Create a new user
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/User'
              required:
                - password
                - name
                - phone
                - email
                - role_id
                - status
                - enterprise_id
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/User'
                required:
                  - password
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/users/{id}':
    patch:
      tags:
        - User
      security:
      - bearerAuth: []
      summary: Update user
      description: Update user
      operationId: UserUpdate
      parameters:
      - name: id
        description: ID to update user
        in: path
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
      requestBody:
        description: update user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
    get:
      security:
      - bearerAuth: []
      tags:
        - User
      summary: Get user  by ID
      description: Return a single user
      operationId: getUsersById
      parameters:
        - name: id
          description: ID to get user
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
        - in: query
          name: populate
          schema:
            type: array
            items:
              type: string
              example: 'role'
          description: |
            - role
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/User'
                required:
                  - id
                  - name
                  - phone
                  - email
                  - password
                  - role_id
                  - status
                  - enterprise_id
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/users/change-password':
    post:
      tags:
        - User
      security:
      - bearerAuth: []
      summary: Change password for user
      description: Change password for user
      operationId: userChangePassword
      requestBody:
        description: update user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Password'
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/auth/login':
    post:
      tags:
        - Auth
      summary: Login to system
      description: Login to system
      operationId: login
      requestBody:
        description: Login to system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Login to system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/auth/me':
    get:
      security:
      - bearerAuth: []
      tags:
        - Auth
      summary: Get info user from access token
      description: Return a single user
      operationId: getAuthMe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - user
                  - iat
                  - exp
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  iat:
                    type: number
                    example: 1668674152
                  exp:
                    type: number
                    example: 1668674152
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/auth/logout':
      get:
        tags:
          - Auth
        summary: Logout from system
        description: Logout from system
        operationId: logout
        responses:
          '204':
            description: Logout to system
          '400':
            description: Validation error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponseBody'
                examples:
                  example-1:
                    value:
                      message: Bad Request
                      details:
                        - field: .params.id
                          message: 'should match pattern "^[0-9]+$"'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponseBody'
                examples:
                  example-1:
                    value:
                      message: Internal server error
                      details: []
  '/conference-templates':
    post:
      security:
      - bearerAuth: []
      tags:
        - Conference
      summary: Add a conferenceTemplate
      description: Add a conferenceTemplate
      operationId: addConferenceTemplate
      requestBody:
        description: Create a conference
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConferenceTemplate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceTemplate'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/conferences/{id}':
    put:
      security:
      - bearerAuth: []
      tags:
        - Conference
      summary: Update an existing conference
      description: Update an existing conference by Id
      operationId: updateConference
      parameters:
        - name: id
          description: ID to update conference
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      requestBody:
        description: Update an existing conference
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Conference'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conference'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not found
                    details: []
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
components:
  schemas:
    Exhibition:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: Triển lãm xúc tiến đầu tư thương mại
        exhibition_code:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '^[a-zA-Z0-9_-]+$'
          example: TL0001
        date_exhibition_start:
          type: string
          minLength: 1
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-01-01T00:00:00.000Z'
        date_exhibition_end:
          type: string
          minLength: 1
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-12-01T00:00:00.000Z'
        introduction:
          type: string
          minLength: 1
          maxLength: 20000
          example: Giới thiệu công ty Tòa nhà C22-Officetel, số 22 Nguyễn Việt Hồng, phường An Phú, quận Ninh Kiều, TP. Cần Thơ
        agenda:
          type: string
          minLength: 1
          maxLength: 20000
          example: '07h45 - 08h20: Đón tiếp đại biểu, 08h20 - 08h40: Ca nhạc chào mừng'
        status:
          type: string
          enum: ['new','listing','finished']
        booth_organization_id:
          type: integer
          readOnly: true
          example: 1
        space_id:
          type: integer
          readOnly: true
          example: 1
        conference_id:
          type: integer
          readOnly: true
          example: 1
    BoothOrganization:
      type: object
      required:
        - id
        - booth_organization_template_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        position_x:
          type: number
          example: 1
        position_y:
          type: number
          example: 1
        position_z:
          type: number
          example: 1
        rotation_x:
          type: number
          example: 1
        rotation_y:
          type: number
          example: 1
        rotation_z:
          type: number
          example: 1
        booth_organization_template_id:
          type: integer
          writeOnly: true
          example: 1
        booth_organization_images:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BoothOrganizationImage'
        booth_organization_videos:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BoothOrganizationVideo'
        booth_organization_projects:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BoothOrganizationProject'
        booth_organization_products:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BoothOrganizationProduct'
    BoothOrganizationImage:
      type: object
      required:
        - id
        - image_id
        - booth_organization_template_position_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        selected_media_id:
          type: integer
          writeOnly: true
          example: 1
        image_id:
          type: integer
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          example: 'base64 string'
        booth_organization_template_position_id:
          type: integer
          writeOnly: true
          example: 1
    BoothOrganizationVideo:
      type: object
      required:
        - id
        - video_id
        - booth_organization_template_position_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        selected_media_id:
          type: integer
          writeOnly: true
          example: 1
        video_id:
          type: integer
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          example: 'base64 string'
        booth_organization_template_position_id:
          type: integer
          writeOnly: true
          example: 1
    BoothOrganizationProject:
      type: object
      required:
        - id
        - image_id
        - title
        - description
        - booth_organization_template_position_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        selected_media_id:
          type: integer
          writeOnly: true
          example: 1
        image_id:
          type: integer
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          example: 'base64 string'
        title:
          type: string
          maxLength: 255
          example: "Tên dự án"
        description:
          type: string
          maxLength: 20000
          example: "Mô tả dự án"
        booth_organization_template_position_id:
          type: integer
          writeOnly: true
          example: 1
    BoothOrganizationProduct:
      type: object
      required:
        - id
        - name
        - image_id
        - price
        - purchase_link
        - description
        - booth_organization_template_position_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          maxLength: 255
          example: "name"
        selected_media_id:
          type: integer
          writeOnly: true
          example: 1
        image_id:
          type: integer
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          example: 'base64 string'
        price:
          type: number
          format: float
          example: 20000
        purchase_link:
          type: string
          maxLength: 255
          example: 'https://link_mua_san_pham/ma_ha_noi.png'
        description:
          type: string
          maxLength: 500
          example: 'Mô tả sản phẩm'
        booth_organization_template_position_id:
          type: integer
          writeOnly: true
          example: 1
    BoothOrganizationTemplatePosition:
      type: object
      required:
        - id
        - type
        - position
      properties:
        id:
          type: number
          readOnly: true
          example: 1
        position:
          type: string
          maxLength: 255
          example: vitri1
        type:
          type: string
          enum: ['image', 'video', 'project', 'product']
          example: 'image'
    Space:
      type: object
      required:
        - id
        - name
        - exhibition_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        space_template_id:
          type: integer
          example: 1
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: 'Mau khong gian tien sanh mac dinh'
        exhibition_id:
          type: number
          example: 1
        locations:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Location'
        space_images:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SpaceImage'
        space_videos:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SpaceVideo'
    SpaceVideo:
      type: object
      required:
        - id
        - space_id
        - space_template_position_id
        - video_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        space_id:
          type: number
          writeOnly: true
          example: 1
        space_template_position_id:
          type: number
          writeOnly: true
          example: 1
        select_media_id:
          type: number
          writeOnly: true
          example: 1
        video_id:
          type: number
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          example: "base64 string"
    SpaceImage:
      type: object
      required:
        - id
        - space_id
        - space_template_position_id
        - image_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        space_id:
          type: number
          writeOnly: true
          example: 1
        space_template_position_id:
          type: number
          writeOnly: true
          example: 1
        select_media_id:
          type: number
          writeOnly: true
          example: 1
        image_id:
          type: number
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          example: "base64 string"
    Location:
      type: object
      required:
        - id
        - status
        - space_id
        - space_template_location_id
      properties:
        id:
          type: integer
          readOnly: true
        status:
          type: string
          enum: ['available', 'reserved']
          default: 'available'
        space_id:
          type: number
          writeOnly: true
          example: 1
        space_template_location_id:
          type: number
          writeOnly: true
          example: 1
        space_template_location:
          $ref: '#/components/schemas/SpaceTemplateLocation'
    SpaceTemplateLocation:
      type: object
      required:
        - id
        - name
        - position_x
        - position_y
        - position_z
        - rotation_x
        - rotation_y
        - rotation_z
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          example: 'a'
        position_x:
          type: number
          example: 1
        position_y:
          type: number
          example: 1
        position_z:
          type: number
          example: 1
        rotation_x:
          type: number
          example: 1
        rotation_y:
          type: number
          example: 1
        rotation_z:
          type: number
          example: 1
    BoothTemplateList:
      type: object
      required:
        - page
        - limit
        - total
        - booth_templates
      properties:
        page:
          type: integer
          example: 0
          description: The number of items to skip before starting to collect the result set.
        limit:
          type: integer
          example: 10
          description: The number of items to return.
        total:
          type: integer
          format: int64
          example: 1
        booth_templates:
          type: array
          items:
            $ref: '#/components/schemas/BoothTemplate'
    BoothTemplate:
      type: object
      required:
        - id
        - model_data
        - thumbnail_data
        - name
        - type
        - created_by
        - created_date
        - model_id
        - thumbnail_id
        - booth_template_positions
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        created_date:
          type: string
          readOnly: true
        model_data:
          type: string
          description: 'input base64 string /n example: iVBORw0KGgoAAAANSUhEUgAABuIAAASxCAYAAADF8I...'
          writeOnly: true
        thumbnail_data:
          type: string
          description: "input base64 string example: iVBORw0KGgoAAAANSUhEUgAABuIAAASxCAYAAADF8I..."
          writeOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 255
        type:
          type: string
          enum: ['project', 'product', 'organize']
          example: 'project'
        model_id:
          type: integer
          readOnly: true
        thumbnail_id:
          type: integer
          readOnly: true
        booth_template_positions:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BoothTemplatePosition'
    SpaceTemplate:
      type: object
      required:
        - id
        - name
        - model_data
        - thumbnail_data
        - thumbnail_id
        - created_by
        - created_date
        - model_id
        - map_id
        - map_data
        - space_template_positions
        - space_template_locations
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: "Mẫu không gian 01"
        created_by:
          type: number
          example: 1
          readOnly: true
        model_id:
          type: integer
          readOnly: true
        model_data:
          type: string
          writeOnly: true
          example: 'base64 string'
        thumbnail_id:
          type: integer
          readOnly: true
        thumbnail_data:
          type: string
          writeOnly: true
          example: 'base64 string'
        map_id:
          type: integer
          readOnly: true
        map_data:
          type: string
          writeOnly: true
          example: 'base64 string'
        created_date:
          type: string
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-01-01T00:00:00.000Z'
        space_template_positions:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SpaceTemplatePosition'
        space_template_locations:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SpaceTemplateLocation'
    BoothOrganizationTemplate:
      type: object
      required:
        - id
        - name
        - created_by
        - created_date
        - model_id
        - thumbnail_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          maxLength: 255
          example: "Mẫu gian hàng BTC"
        created_by:
          type: integer
          readOnly: true
          example: 1
        created_date:
          type: string
          readOnly: true
        model_id:
          type: integer
          readOnly: true
        thumbnail_id:
          type: integer
          readOnly: true
        model_data:
          type: string
          description: 'input base64 string /n example: iVBORw0KGgoAAAANSUhEUgAABuIAAASxCAYAAADF8I...'
          writeOnly: true
        thumbnail_data:
          type: string
          description: "input base64 string example: iVBORw0KGgoAAAANSUhEUgAABuIAAASxCAYAAADF8I..."
          writeOnly: true
        booth_organization_template_positions:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BoothOrganizationTemplatePosition'
    SpaceTemplatePosition:
      type: object
      required:
       - id
       - position
       - type
      properties:
        id:
          type: integer
          readOnly: true
        position:
          type: string
          maxLength: 255
        type:
          type: string
          enum: ['image','video']
    SpaceTemplateList:
      type: object
      required:
        - page
        - limit
        - total
        - space_templates
      properties:
        page:
          type: integer
          example: 0
          description: The number of items to skip before starting to collect the result set.
        limit:
          type: integer
          example: 10
          description: The number of items to return.
        total:
          type: integer
          format: int64
          example: 1
        space_templates:
          type: array
          items:
            $ref: '#/components/schemas/SpaceTemplate'
    Enterprise:
      type: object
      required:
        - id
        - name
        - phone
        - email
        - address
        - description
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: DALAVINA TECHNOLOGY SOLUTION JOINT STOCK TECHNOLOGY
        phone:
          type: string
          pattern: '^[0-9]{10,15}$'
          example: 0707678777
        email:
          type: string
          format: email
          example: dalavina@dalavina.com
        address:
          type: string
          minLength: 1
          maxLength: 255
          example: 224, Phạm Thị Giây, ấp Tam Đông 2, Hóc Môn, Thành phố Hồ Chí Minh
        description:
          type: string
          minLength: 1
          maxLength: 2000
        link_website:
          type: string
          minLength: 1
          maxLength: 255
          example: https://dalavina.com/view_company_online
        link_profile:
          type: string
          minLength: 1
          maxLength: 255
          example: https://dalavina.com/view_company_online
        type_of_business:
          type: string
          minLength: 1
          maxLength: 255
          example: Công ty cổ phần ngoài NN
    MediaList:
      type: object
      required:
        - page
        - limit
        - total
        - medias
      properties:
        page:
          type: integer
          example: 0
          description: The number of items to skip before starting to collect the result set.
        limit:
          type: integer
          example: 10
          description: The number of items to return.
        total:
          type: integer
          format: int64
          example: 1
        medias:
          type: array
          items:
            $ref: '#/components/schemas/Media'
    Media:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        data:
          type: string
          minLength: 1
          writeOnly: true
        mime:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
        user_id:
          type: integer
          readOnly: true
    MediaResponse:
      type: object
      required:
        - id
        - mime
        - url
        - user_id
      properties:
        id:
          type: integer
          readOnly: true
        mime:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
        user_id:
          type: integer
          readOnly: true
    ErrorResponseBody:
      type: object
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
    ErrorDetail:
      type: object
      required:
        - field
        - message
      properties:
        field:
          type: string
        message:
          type: string
    EnterpriseList:
      type: object
      required:
        - limit
        - page
        - total
        - enterprises
      properties:
        page:
          type: integer
          example: 0
          description: The number of items to skip before starting to collect the result set.
        limit:
          type: integer
          example: 10
          description: The number of items to return.
        total:
          type: integer
          format: int64
          example: 1
        enterprises:
          type: array
          items:
            $ref: '#/components/schemas/Enterprise'
    Category:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          example: 0
          description: The number id category.
        name:
          type: string
          example: 'loai triễn lảm'
          description: The name category.
    ExhibitionList:
      type: object
      required:
        - page
        - limit
        - total
        - exhibitions
      properties:
        page:
          type: integer
          example: 0
          description: The number of items to skip before starting to collect the result set.
        limit:
          type: integer
          example: 10
          description: The number of items to return.
        total:
          type: integer
          format: int64
          example: 1
        exhibitions:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Exhibition'
            - properties:
                booth_number:
                  type: number
                  example: 100
              required:
                - id
                - name
                - exhibition_code
                - date_exhibition_start
                - date_exhibition_end
                - introduction
                - agenda
                - booth_number
                - status
    BoothTemplatePosition:
      type: object
      required:
        - id
        - type
        - position
      properties:
        id:
          type: number
          readOnly: true
          example: 1
        type:
          type: string
          enum: ['image', 'video', 'project', 'product']
          example: 'image'
        position:
          type: string
          maxLength: 255
    Booth:
      type: object
      required:
        - id
        - name
        - enterprise_id
        - created_by
        - location_id
        - booth_template_id
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        name:
          type: string
        enterprise_id:
          type: integer
          example: 1
        created_by:
          type: integer
          readOnly: true
          example: 1
        created_date:
          type: string
          readOnly: true
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-01-01T00:00:00.000Z'
        location_id:
          type: integer
          writeOnly: true
          example: 1
        booth_template_id:
          type: integer
          writeOnly: true
          example: 1
        live_streams:
          type: array
          items:
            $ref: '#/components/schemas/LiveStream'
        booth_images:
          type: array
          items:
            $ref: '#/components/schemas/BoothImage'
        booth_videos:
          type: array
          items:
            $ref: '#/components/schemas/BoothVideo'
        booth_projects:
          type: array
          items:
            $ref: '#/components/schemas/BoothProject'
        booth_products:
          type: array
          items:
            $ref: '#/components/schemas/BoothProduct'
    BoothList:
      type: object
      required:
        - page
        - limit
        - total
        - booths
      properties:
        page:
          type: integer
          readOnly: true
          example: 1
        limit:
          type: integer
          readOnly: true
          example: 1
        total:
          type: integer
          readOnly: true
          example: 1
        booths:
          type: array
          items:
            $ref: '#/components/schemas/Booth'
    User:
        type: object
        required:
          - id
        properties:
          id:
            type: integer
            readOnly: true
          name:
            type: string
          phone:
            type: string
            pattern: '^(((\+|)84)|0)([0-9]{9})$'
            example: 0707060142
          email:
              type: string
              format: email
          password:
            type: string
            format: password
            writeOnly: true
            minLength: 6
            maxLength: 255
          role_id:
            type: number
            writeOnly: true
          role:
            $ref: '#/components/schemas/Role'
          status:
            type: string
            enum: [active, inactive]
          enterprise_id:
            type: number
    Role:
      readOnly: true
      required:
        - id
      properties:
        id:
          type: integer
        name:
          type: string
    Password:
        type: object
        required:
          - current_password
          - password
        properties:
          current_password:
            type: string
            format: password
            writeOnly: true
            minLength: 6
            maxLength: 255
          password:
            type: string
            format: password
            writeOnly: true
            minLength: 6
            maxLength: 255
    Login:
      required:
          - email
          - password
          - access_token
      properties:
        email:
          type: string
          format: email
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access_token:
          readOnly: true
          type: string
    LiveStream:
      type: object
      required:
        - id
        - link
        - time
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        link:
          type: string
          minLength: 1
          example: 'www.goole.com'
        time:
          type: string
          minLength: 1
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-12-01T00:00:00.000Z'
    BoothImage:
      type: object
      required:
        - id
        - booth_template_position_id
        - image_id
      properties:
        id:
          type: integer
          readOnly: true
        selected_media_id:
          type: integer
          writeOnly: true
          description: This column exists if image selected from data center
          example: 1
        image_id:
          type: integer
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          description: This column exists if image selected from your local
          example: 'base64 string'
        booth_template_position_id:
          type: integer
          example: 1
    BoothVideo:
      type: object
      required:
        - id
        - booth_template_position_id
        - video_id
      properties:
        id:
          type: integer
          readOnly: true
        selected_media_id:
          type: integer
          writeOnly: true
          description: This column exists if video selected from data center
          example: 1
        video_id:
          type: integer
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          description: This column exists if video selected from your local
          example: 'base64 string'
        booth_template_position_id:
          type: integer
          example: 1
    BoothProject:
      type: object
      required:
        - id
        - booth_template_position_id
        - image_id
        - title
        - description
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        selected_media_id:
          type: integer
          writeOnly: true
          description: This column exists if video or image selected from data center
        image_id:
          type: integer
          readOnly: true
        media_data:
          type: string
          writeOnly: true
          description: This column exists if video or image selected from your local
          example: 'base64 string'
        title:
          type: string
          maxLength: 255
          example: 'Tên dự án'
        description:
          type: string
          maxLength: 20000
          example: 'Nội dung mô tả cho dự án'
        booth_template_position_id:
          type: integer
          writeOnly: true
          example: 1
    BoothOrganizationTemplateList:
      type: object
      required:
        - page
        - limit
        - total
        - booth_organization_templates
      properties:
        page:
          type: integer
          example: 0
          description: The number of items to skip before starting to collect the result set.
        limit:
          type: integer
          example: 10
          description: The number of items to return.
        total:
          type: integer
          format: int64
          example: 1
        booth_organization_templates:
          type: array
          items:
            $ref: '#/components/schemas/BoothOrganizationTemplate'
    BoothProduct:
      type: object
      required:
        - id
        - name
        - price
        - purchase_link
        - booth_template_position_id
        - description
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          maxLength: 255
          example: 'mận Hà Nội'
        price:
          type: number
          format: float
          example: 35000
        purchase_link:
          type: string
          maxLength: 255
          example: 'https://link_mua_san_pham/ma_ha_noi.png'
        description:
          type: string
          maxLength: 500
          example: 'Mô tả sản phẩm'
        selected_media_id:
          type: integer
          writeOnly: true
          description: This column exists if image selected from data center
          example: 1
        image_id:
          type: integer
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          description: This column exists if image selected from your local
          example: 'base64 string'
        booth_template_position_id:
          type: integer
          writeOnly: true
          example: 1
    MeetingList:
      type: object
      required:
        - page
        - limit
        - total
        - meetings
      properties:
        page:
          type: integer
          readOnly: true
          example: 1
        limit:
          type: integer
          readOnly: true
          example: 1
        total:
          type: integer
          readOnly: true
          example: 1
        meetings:
          type: array
          items:
            $ref: '#/components/schemas/Meeting'
    Meeting:
      type: object
      required:
        - 'booth_id'
        - 'customer_name'
        - 'phone'
        - 'email'
        - 'start_time'
        - 'end_time'
      properties:
        booth_id:
          type: integer
          writeOnly: true
          example: 1
        customer_name:
          type: string
          minLength: 1
          maxLength: 255
          example: John
        phone:
          type: string
          minLength: 1
          maxLength: 255
          example: '0970000000'
        email:
          type: string
          format: email
        start_time:
          type: string
          minLength: 1
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-12-01T00:00:00.000Z'
        end_time:
          type: string
          minLength: 1
          pattern: '^[1-9]\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          example: '2022-12-01T00:00:00.000Z'
        note:
          type: string
          minLength: 1
          maxLength: 255
    ConferenceTemplate:
      type: object
      required:
        - id
        - model_data
        - thumbnail_data
        - name
        - created_by
        - created_date
        - model_id
        - thumbnail_id
        - conference_template_positions
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        created_date:
          type: string
          readOnly: true
        model_data:
          type: string
          description: 'input base64 string /n example: iVBORw0KGgoAAAANSUhEUgAABuIAAASxCAYAAADF8I...'
          writeOnly: true
        thumbnail_data:
          type: string
          description: "input base64 string example: iVBORw0KGgoAAAANSUhEUgAABuIAAASxCAYAAADF8I..."
          writeOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 255
        model_id:
          type: integer
          readOnly: true
        thumbnail_id:
          type: integer
          readOnly: true
        conference_template_positions:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ConferenceTemplatePosition'
    ConferenceTemplatePosition:
      type: object
      required:
        - id
        - type
        - position
      properties:
        id:
          type: number
          readOnly: true
          example: 1
        type:
          type: string
          enum: ['image', 'video']
          example: 'image'
        position:
          type: string
          maxLength: 255
    Conference:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        conference_template_id:
          type: integer
          example: 1
        name:
          type: string
          minLength: 1
          maxLength: 255
          example: 'Mau phong hop 1'
        exhibition_id:
          type: number
          example: 1
        conference_images:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ConferenceImage'
        conference_videos:
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ConferenceVideo'
    ConferenceVideo:
      type: object
      required:
        - id
        - conference_id
        - conference_template_position_id
        - video_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        conference_id:
          type: number
          writeOnly: true
          example: 1
        conference_template_position_id:
          type: number
          writeOnly: true
          example: 1
        select_media_id:
          type: number
          writeOnly: true
          example: 1
        video_id:
          type: number
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          example: "base64 string"
    ConferenceImage:
      type: object
      required:
        - id
        - conference_id
        - conference_template_position_id
        - image_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        conference_id:
          type: number
          writeOnly: true
          example: 1
        conference_template_position_id:
          type: number
          writeOnly: true
          example: 1
        select_media_id:
          type: number
          writeOnly: true
          example: 1
        image_id:
          type: number
          readOnly: true
          example: 1
        media_data:
          type: string
          writeOnly: true
          example: "base64 string"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
