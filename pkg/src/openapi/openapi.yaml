openapi: 3.0.0
info:
  title: COMPAON API
  version: 1.0.0
  contact:
    email: compaon@dalavina.com
    name: Compaon
    url: 'https://dalavina.com/compaon'
  license:
    name: EULA
    url: 'https://en.wikipedia.org/wiki/End-user_license_agreement'
  description: API definition for COMPAON
tags:
  - name: Booth
    description: API to interact with the Booth
  - name: Exhibition
    description: API to interact with the Exhibition
  - name: Media
    description: API to interact with the Media
  - name: Enterprise
    description: API to interact with the Enterprise
servers:
  - url: 'http://localhost:3000/api/v1'
paths:
  '/exhibitions':
    get:
      summary: Get exhibitions
      description: Return multiple exhibitions
      operationId: getExhibitions
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: The numbers of items to return
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    format: int64
                    example: 0
                  limit:
                    type: integer
                    format: int64
                    example: 10
                  total:
                    type: integer
                    format: int64
                    example: 1
                  exhibitions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Exhibition'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
      tags:
        - Exhibition
  '/exhibitions/{id}':
    get:
      summary: Get exhibition by ID
      description: Return a single exhibition
      operationId: getExhibitionById
      parameters:
        - name: id
          description: ID to get exhibition
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exhibition'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
      tags:
        - Exhibition
  '/enterprises':
    get:
      tags:
        - Enterprise
      summary: Show list enterprises
      description: Show list enterprises
      operationId: getEnterprise
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: The numbers of items to return
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseList'
    post:
      tags:
        - Enterprise
      summary: Add a new enterprise
      description: Add a new enterprise
      operationId: addEnterprise
      requestBody:
        description: Create a new enterprise
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enterprise'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/enterprises/{id}/documents':
    post:
      tags:
        - Enterprise
      summary: Add a new enterprise's document
      description: Add a new enterprise's document
      operationId: addEnterpriseDocument
      parameters:
        - schema:
            type: string
            pattern: '^[0-9]+$'
          name: id
          in: path
          required: true
          description: The enterprise's ID will be add new document
      requestBody:
        description: Create a new enterprise's document
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterpriseDocument'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
              examples:
                example-1:
                  value:
                    id: 1
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/enterprises/{id}/profiles':
    post:
      tags:
        - Enterprise
      summary: Add a new enterprise's profile
      description: Add a new enterprise's profile
      operationId: addEnterpriseProfile
      parameters:
        - schema:
            type: string
            pattern: '^[0-9]+$'
          name: id
          in: path
          required: true
          description: The enterprise's ID will be add new profile
      requestBody:
        description: Create a new enterprise's profile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterpriseProfile'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
              examples:
                example-1:
                  value:
                    id: 1
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/enterprises/{id}/qrcodes':
    post:
      tags:
        - Enterprise
      summary: Create a enterprise's qrcode
      description: Create a enterprise's qrcode
      operationId: createQrCode
      parameters:
        - schema:
            type: string
            pattern: '^[0-9]+$'
          name: id
          in: path
          required: true
          description: The enterprise's ID will be add new qrcode
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
              examples:
                example-1:
                  value:
                    url: 'base64'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/enterprises/{id}':
    parameters:
      - name: id
        description: ID to get enterprise
        in: path
        required: true
        schema:
          type: string
          pattern: '^[0-9]+'
    get:
      summary: Get enterprise by ID
      description: Return a single enterprise
      operationId: getEnterpriseById
      tags:
        - Enterprise
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
    put:
      tags:
        - Enterprise
      summary: Update an existing enterprise
      description: Update an existing enterprise by Id
      operationId: updateEnterprise
      parameters:
        - name: id
          description: ID to update enterprise
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      requestBody:
        description: Update an existent enterprise
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enterprise'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
    delete:
      tags:
        - Enterprise
      summary: Delete an existing enterprise
      description: Delete an existing enterprise by Id
      operationId: deleteEnterprise
      parameters:
        - name: id
          description: ID to delete enterprise
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      responses:
        '204':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Not Found
                    details:
                      - field: .params.id
                        message: 'The id not exist: "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/medias':
    post:
      tags:
        - Media
      summary: Add a new media
      description: Add a new media
      operationId: createMedia
      requestBody:
        description: Create a new media
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Media'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/medias/{id}':
    parameters:
      - name: id
        description: ID to get media
        in: path
        required: true
        schema:
          type: string
          pattern: '^[0-9]+$'
    get:
      summary: Get media by ID
      description: Return a single media
      operationId: getMediaById
      tags:
        - Media
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
  '/booths/{id}/templates':
    post:
      summary: ''
      operationId: post-templates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
              examples:
                example-1:
                  value:
                    id: 1
      description: Create a new template for a booth
      requestBody:
        content:
          application/json:
            schema:
              type: object
            examples:
              example-1:
                value:
                  slot1: 'https://domain.dev/image1.jpg'
                  slot2: 'https://domain.dev/video1.mp4'
                  slot3: 'https://domain.dev/video1.mp4'
      tags:
        - Booth
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: The booth's ID will be add new template
  '/users':
    post:
      tags:
        - User
      summary: Add a new user
      description: Add a new user
      operationId: addUser
      requestBody:
        description: Create a new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Bad Request
                    details:
                      - field: .params.id
                        message: 'should match pattern "^[0-9]+$"'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseBody'
              examples:
                example-1:
                  value:
                    message: Internal server error
                    details: []
components:
  schemas:
    Exhibition:
      type: object
      required:
        - id
        - panos
      properties:
        id:
          type: integer
          readOnly: true
        panos:
          type: array
          items:
            $ref: '#/components/schemas/Pano'
    Enterprise:
      type: object
      required:
        - id
        - international_name
        - abbreviation
        - tax_code
        - address
        - ceo
        - phone
        - active_date
        - status
        - type_of_business
        - manager_by
        - created_by
        - created_date
      properties:
        id:
          type: integer
          readOnly: true
        international_name:
          type: string
          minLength: 1
          maxLength: 255
          example: DALAVINA TECHNOLOGY SOLUTION JOINT STOCK TECHNOLOGY
        abbreviation:
          type: string
          minLength: 1
          maxLength: 255
          example: DALAVINA JSC
        tax_code:
          type: string
          minLength: 1
          maxLength: 255
          example: 0371278269
        address:
          type: string
          minLength: 1
          maxLength: 255
          example: 224, Phạm Thị Giây, ấp Tam Đông 2, Hóc Môn, Thành phố Hồ Chí Minh
        ceo:
          type: string
          minLength: 1
          maxLength: 255
          example: PHAN THANH TUNG
        phone:
          type: string
          pattern: '^(((\+|)84)|0)([0-9]{9})$'
          example: 0707678777
        active_date:
          type: string
          minLength: 1
          pattern: '^((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$'
          example: 2020-04-03T01:58:26.000Z
        created_by:
          type: number
          readOnly: true
          minLength: 1
          example: 1
        created_date:
          type: string
          readOnly: true
          minLength: 1
          pattern: '^((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$'
          example: 2020-04-03T01:58:26.000Z
        status:
          type: string
          enum: ['active', 'inactive']
          example: 'active'
        type_of_business:
          type: string
          minLength: 1
          maxLength: 255
          example: Công ty cổ phần ngoài NN
        manager_by:
          type: string
          minLength: 1
          maxLength: 255
          example: Chi cục thuế Quận 1
        view_company_online:
          type: string
          minLength: 1
          maxLength: 255
          example: 'https://dalavina.com/view_company_online'
    EnterpriseDocument:
      type: object
      required:
        - title
        - content
      properties:
        id:
          type: number
          readOnly: true
          example: Tiêu đề ....
        title:
          type: string
          example: Tiêu đề ....
          maxLength: 255
        content:
          type: string
          example: Nội dung...
        medias:
          type: array
          items:
            type: string
            format: binary
            pattern: '^[\/iRU][A-Za-z0-9+\/=]+$'
          example:
            - "9j/2wCEAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwc"
            - "9j/2wCEAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwc"
    EnterpriseProfile:
      type: object
      required:
        - document_ids
      properties:
        id:
          type: number
          readOnly: true
          example: 1
        document_ids:
          type: array
          items:
            type: number
            minItems: 1
            maxItems: 30
            uniqueItems: true
            pattern: '^[0-9]+$'
          example:
            - 1
            - 2
    Media:
      type: object
      required:
        - data
        - user_id
      properties:
        id:
          type: integer
          readOnly: true
        data:
          type: string
          minLength: 1
          writeOnly: true
        mime:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
        user_id:
          type: integer
          readOnly: true
    MediaResponse:
      type: object
      required:
        - id
        - mime
        - url
        - user_id
      properties:
        id:
          type: integer
          readOnly: true
        mime:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
        user_id:
          type: integer
          readOnly: true
    ErrorResponseBody:
      type: object
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
    ErrorDetail:
      type: object
      required:
        - field
        - message
      properties:
        field:
          type: string
        message:
          type: string
    Position:
      type: object
      required:
        - x
        - 'y'
        - z
      properties:
        x:
          type: integer
        'y':
          type: integer
        z:
          type: integer
    Pano:
      type: object
      required:
        - media_id
        - markers
      properties:
        media_id:
          type: integer
        markers:
          type: array
          items:
            $ref: '#/components/schemas/Marker'
    Marker:
      type: object
      required:
        - media_id
        - position
        - destination
        - description
      properties:
        media_id:
          type: integer
        position:
          $ref: '#/components/schemas/Position'
        destination:
          type: string
        description:
          type: string
    User:
        type: object
        required:
          - id
          - phone
          - password
          - role_id
          - status
          - information
        properties:
          id:
            type: integer
            readOnly: true
          phone:
            type: string
            pattern: '^(((\+|)84)|0)([0-9]{9})$'
            example: 0707060142
          password:
            type: string
            format: password
            minLength: 6
            maxLength: 255
          department_id:
            type: integer
          role_id:
            type: integer
          status:
            type: string
            enum: [active, deactivate, deleted]
          information:
            $ref: '#/components/schemas/Information'
    Information:
      required: 
        - name
        - user_id
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 255
        user_id:
          type: integer
          readOnly: true
        address:
          type: string
          minLength: 1
          maxLength: 255
        email:
          type: string
          format: email
        media_data:
          type: string
          writeOnly: true
        media_id:
          type: number
          readOnly: true
        selected_media_id:
          type: number
          writeOnly: true
    EnterpriseList:
      type: object
      required:
        - limit
        - offset
        - total
        - enterprises
      properties:
        limit:
          type: integer
          format: int64
          example: 10
        offset:
          type: integer
          format: int64
          example: 0
        total:
          type: integer
          format: int64
          example: 1
        enterprises:
          type: array
          items:
            $ref: '#/components/schemas/Enterprise'         
